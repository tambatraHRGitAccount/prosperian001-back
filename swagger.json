{
  "openapi": "3.0.0",
  "info": {
    "title": "Prosperian API - GraphQL & LinkedIn Sales Navigator",
    "description": "API for managing companies, establishments, officers, addresses, files, and related data using GraphQL with a Supabase backend. All operations are performed via a single GraphQL endpoint using POST requests. Also includes LinkedIn Sales Navigator URL generation and parsing capabilities.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local GraphQL server"
    }
  ],
  "paths": {
    "/graphql": {
      "post": {
        "summary": "GraphQL Endpoint",
        "description": "Single endpoint for all GraphQL queries (read operations) and mutations (create, update, delete operations). Use the 'query' field in the request body to specify the GraphQL operation and 'variables' for input parameters.",
        "tags": ["GraphQL"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "GraphQL query or mutation string (e.g., 'query { companies { id name } }' or 'mutation { createCompany(input: {...}) { id } }')"
                  },
                  "variables": {
                    "type": "object",
                    "description": "Variables for the GraphQL query or mutation (e.g., { id: 'uuid', input: {...} })"
                  }
                },
                "required": ["query"],
                "example": {
                  "query": "query GetCompany($id: ID!) { company(id: $id) { id registration_number name } }",
                  "variables": { "id": "123e4567-e89b-12d3-a456-426614174000" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful GraphQL response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "GraphQL response data, structure depends on the query or mutation",
                      "example": {
                        "company": {
                          "id": "123e4567-e89b-12d3-a456-426614174000",
                          "registration_number": "123456789",
                          "name": "Example Corporation"
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": { "type": "string" },
                          "locations": { "type": "array", "items": { "type": "object" } },
                          "path": { "type": "array", "items": { "type": "string" } }
                        }
                      },
                      "description": "GraphQL errors, if any"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid GraphQL query, variables, or input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": { "type": "string", "example": "Invalid query syntax" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Database or server failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": { "type": "string", "example": "Server error: Database connection failed" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/linkedin-sales": {
      "get": {
        "summary": "LinkedIn Sales Navigator API Interface",
        "description": "Interactive HTML interface for LinkedIn Sales Navigator API. Provides a user-friendly web interface to test all LinkedIn Sales Navigator endpoints including URL generation, parsing, and filter validation.",
        "tags": ["LinkedIn Sales Navigator"],
        "responses": {
          "200": {
            "description": "HTML interface for LinkedIn Sales Navigator API",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "description": "Complete HTML interface with JavaScript for testing LinkedIn Sales Navigator API"
                }
              }
            }
          }
        }
      }
    },
    "/api/linkedin-sales/filter-types": {
      "get": {
        "summary": "Get LinkedIn Sales Navigator Filter Types",
        "description": "Retrieves all available filter types for LinkedIn Sales Navigator searches. Returns different filter types for people (prospects) and company searches.",
        "tags": ["LinkedIn Sales Navigator"],
        "responses": {
          "200": {
            "description": "Filter types retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the request was successful"
                    },
                    "people": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinkedInFilterType"
                      },
                      "description": "Filter types available for people searches"
                    },
                    "company": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinkedInFilterType"
                      },
                      "description": "Filter types available for company searches"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "people": [
                    {
                      "type": "CURRENT_COMPANY",
                      "name": "Current Company",
                      "description": "Filter by current company"
                    }
                  ],
                  "company": [
                    {
                      "type": "INDUSTRY",
                      "name": "Industry",
                      "description": "Filter by industry"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/linkedin-sales/generate-url": {
      "post": {
        "summary": "Generate LinkedIn Sales Navigator URL",
        "description": "Generates a LinkedIn Sales Navigator search URL with advanced filters. Supports both people (prospects) and company searches. Filters are encoded in the query parameter of the URL.",
        "tags": ["LinkedIn Sales Navigator"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedInSearchRequest"
              },
              "examples": {
                "people_search": {
                  "summary": "People search with filters",
                  "value": {
                    "searchType": "people",
                    "keywords": "d√©veloppeur",
                    "filters": [
                      {
                        "type": "CURRENT_COMPANY",
                        "values": [
                          {
                            "id": "urn:li:organization:825160",
                            "text": "Hyundai Motor Company",
                            "selectionType": "INCLUDED"
                          }
                        ]
                      }
                    ]
                  }
                },
                "company_search": {
                  "summary": "Company search with filters",
                  "value": {
                    "searchType": "company",
                    "keywords": "technology",
                    "filters": [
                      {
                        "type": "INDUSTRY",
                        "values": [
                          {
                            "id": "urn:li:industry:4",
                            "text": "Computer Software",
                            "selectionType": "INCLUDED"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedInSearchResponse"
                },
                "example": {
                  "success": true,
                  "url": "https://www.linkedin.com/sales/search/people?query=(spellCorrectionEnabled:true,keywords:d√©veloppeur,filters:List((type:CURRENT_COMPANY,values:List((id:urn:li:organization:825160,text:\"Hyundai Motor Company\",selectionType:INCLUDED)))))",
                  "searchType": "people",
                  "filters": [
                    {
                      "type": "CURRENT_COMPANY",
                      "values": [
                        {
                          "id": "urn:li:organization:825160",
                          "text": "Hyundai Motor Company",
                          "selectionType": "INCLUDED"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid search parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/linkedin-sales/parse-url": {
      "post": {
        "summary": "Parse LinkedIn Sales Navigator URL",
        "description": "Parses a LinkedIn Sales Navigator search URL to extract search parameters, filters, and keywords. Supports both people and company search URLs.",
        "tags": ["LinkedIn Sales Navigator"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "LinkedIn Sales Navigator search URL to parse",
                    "format": "uri"
                  }
                },
                "required": ["url"]
              },
              "example": {
                "url": "https://www.linkedin.com/sales/search/people?query=(spellCorrectionEnabled:true,keywords:d√©veloppeur,filters:List((type:CURRENT_COMPANY,values:List((id:urn:li:organization:825160,text:\"Hyundai Motor Company\",selectionType:INCLUDED)))))"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL parsed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the parsing was successful"
                    },
                    "searchType": {
                      "type": "string",
                      "enum": ["people", "company"],
                      "description": "Type of search (people or company)"
                    },
                    "keywords": {
                      "type": "string",
                      "description": "Search keywords extracted from URL"
                    },
                    "filters": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinkedInSearchFilters"
                      },
                      "description": "Filters extracted from URL"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "searchType": "people",
                  "keywords": "d√©veloppeur",
                  "filters": [
                    {
                      "type": "CURRENT_COMPANY",
                      "values": [
                        {
                          "id": "urn:li:organization:825160",
                          "text": "Hyundai Motor Company",
                          "selectionType": "INCLUDED"
                        }
                      ]
                    }
                  ],
                  "message": "URL parsed successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid URL format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/linkedin-sales/validate-filters": {
      "post": {
        "summary": "Validate LinkedIn Sales Navigator Filters",
        "description": "Validates LinkedIn Sales Navigator search filters for a given search type. Checks filter compatibility and provides warnings for potential issues.",
        "tags": ["LinkedIn Sales Navigator"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searchType": {
                    "type": "string",
                    "enum": ["people", "company"],
                    "description": "Type of search (people or company)"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LinkedInSearchFilters"
                    },
                    "description": "Filters to validate"
                  }
                },
                "required": ["searchType"]
              },
              "example": {
                "searchType": "people",
                "filters": [
                  {
                    "type": "CURRENT_COMPANY",
                    "values": [
                      {
                        "id": "urn:li:organization:825160",
                        "text": "Hyundai Motor Company",
                        "selectionType": "INCLUDED"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Filters validated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the validation was successful"
                    },
                    "valid": {
                      "type": "boolean",
                      "description": "Whether the filters are valid"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Validation errors, if any"
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Validation warnings, if any"
                    },
                    "message": {
                      "type": "string",
                      "description": "Validation result message"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "valid": true,
                  "errors": [],
                  "warnings": [],
                  "message": "Filters are valid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid filter format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "error": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/linkedin-sales/extract-session": {
      "post": {
        "summary": "Extraire le SessionId d'une URL LinkedIn Sales Navigator",
        "description": "Extrait le sessionId d'une URL LinkedIn Sales Navigator existante. Utile pour r√©cup√©rer le sessionId d'une session active.",
        "tags": [
          "LinkedIn Sales Navigator"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL LinkedIn Sales Navigator compl√®te",
                    "example": "https://www.linkedin.com/sales/search/people?query=(spellCorrectionEnabled:true,filters:List((type:CURRENT_COMPANY,values:List((id:urn:li:organization:825160,text:\"Hyundai Motor Company\",selectionType:INCLUDED)))))&sessionId=oyT4SvXfQXWQEbOH54crEQ%3D%3D"
                  }
                },
                "example": {
                  "url": "https://www.linkedin.com/sales/search/people?query=(spellCorrectionEnabled:true,filters:List((type:CURRENT_COMPANY,values:List((id:urn:li:organization:825160,text:\"Hyundai Motor Company\",selectionType:INCLUDED)))))&sessionId=oyT4SvXfQXWQEbOH54crEQ%3D%3D"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SessionId extrait avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "sessionId": {
                      "type": "string",
                      "description": "SessionId extrait de l'URL"
                    },
                    "decodedSessionId": {
                      "type": "string",
                      "description": "SessionId d√©cod√©"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "URL invalide ou sessionId non trouv√©"
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      }
    },
    "/api/linkedin-sales/generate-url-with-session": {
      "post": {
        "summary": "G√©n√©rer une URL LinkedIn Sales Navigator avec SessionId",
        "description": "G√©n√®re une URL LinkedIn Sales Navigator avec un sessionId sp√©cifique. Permet de cr√©er des URLs qui utilisent une session existante.",
        "tags": [
          "LinkedIn Sales Navigator"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "searchType",
                  "sessionId"
                ],
                "properties": {
                  "searchType": {
                    "type": "string",
                    "enum": [
                      "people",
                      "company"
                    ]
                  },
                  "keywords": {
                    "type": "string"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LinkedInSearchFilters"
                    }
                  },
                  "sessionId": {
                    "type": "string",
                    "description": "SessionId LinkedIn Sales Navigator"
                  },
                  "viewAllFilters": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "example": {
                  "searchType": "people",
                  "keywords": "d√©veloppeur",
                  "filters": [
                    {
                      "type": "CURRENT_COMPANY",
                      "values": [
                        {
                          "id": "urn:li:organization:825160",
                          "text": "Hyundai Motor Company",
                          "selectionType": "INCLUDED"
                        }
                      ]
                    }
                  ],
                  "sessionId": "oyT4SvXfQXWQEbOH54crEQ%3D%3D",
                  "viewAllFilters": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL g√©n√©r√©e avec sessionId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "url": {
                      "type": "string"
                    },
                    "searchType": {
                      "type": "string"
                    },
                    "sessionId": {
                      "type": "string"
                    },
                    "filters": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinkedInSearchFilters"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Param√®tres invalides"
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      }
    },
    "/api/pronto/search-leads": {
      "post": {
        "summary": "Recherche avanc√©e de leads avec Pronto (INDISPONIBLE)",
        "description": "‚ö†Ô∏è ENDPOINT TEMPORAIREMENT INDISPONIBLE - L'API Pronto a modifi√© ses endpoints. Retourne une erreur 503 avec des alternatives.",
        "tags": [
          "Pronto"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "persona": {
                    "type": "string",
                    "description": "Persona cible (ex: \"Marketing Director\")"
                  },
                  "exactMatch": {
                    "type": "boolean",
                    "default": false,
                    "description": "Correspondance exacte pour le persona"
                  },
                  "jobTitles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Liste des titres de poste"
                  },
                  "companySize": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["1-10", "11-50", "51-200", "201-500", "501-1000", "1000+"]
                    },
                    "description": "Taille des entreprises"
                  },
                  "leadLocation": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Localisation des leads"
                  },
                  "companyLocation": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Localisation des entreprises"
                  },
                  "industries": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Secteurs d'activit√©"
                  },
                  "limit": {
                    "type": "integer",
                    "default": 50,
                    "description": "Nombre maximum de r√©sultats"
                  },
                  "offset": {
                    "type": "integer",
                    "default": 0,
                    "description": "Offset pour la pagination"
                  }
                }
              },
              "example": {
                "persona": "Marketing Director",
                "exactMatch": true,
                "jobTitles": ["Marketing Director", "Head of Marketing"],
                "companySize": ["1-10", "11-50"],
                "leadLocation": ["Paris", "New York"],
                "companyLocation": ["Paris"],
                "industries": ["Software", "Luxury"],
                "limit": 50,
                "offset": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recherche effectu√©e avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fullName": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "company": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "size": {
                                "type": "string"
                              },
                              "industry": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            }
                          },
                          "profilePicture": {
                            "type": "string"
                          },
                          "linkedinUrl": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "seniority": {
                            "type": "string"
                          },
                          "department": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "limit": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        },
                        "hasMore": {
                          "type": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Param√®tres de requ√™te invalides"
          },
          "401": {
            "description": "Cl√© API Pronto invalide"
          },
          "429": {
            "description": "Limite de taux d√©pass√©e"
          },
          "503": {
            "description": "Service temporairement indisponible",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "error": { "type": "string", "example": "Service de recherche directe temporairement indisponible" },
                    "message": { "type": "string", "example": "L'API Pronto a modifi√© ses endpoints. Veuillez utiliser les recherches existantes." },
                    "alternative": {
                      "type": "object",
                      "properties": {
                        "description": { "type": "string" },
                        "searches": { "type": "array" },
                        "total_available_searches": { "type": "integer" }
                      }
                    },
                    "suggestions": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      }
    },
    "/api/pronto/search-leads-from-company": {
      "post": {
        "summary": "Recherche de leads depuis une entreprise sp√©cifique",
        "description": "Recherche tous les leads disponibles pour une entreprise donn√©e en utilisant l'API Pronto",
        "tags": [
          "Pronto"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "companyName"
                ],
                "properties": {
                  "companyName": {
                    "type": "string",
                    "description": "Nom de l'entreprise"
                  },
                  "limit": {
                    "type": "integer",
                    "default": 50,
                    "description": "Nombre maximum de r√©sultats"
                  },
                  "offset": {
                    "type": "integer",
                    "default": 0,
                    "description": "Offset pour la pagination"
                  }
                }
              },
              "example": {
                "companyName": "Google",
                "limit": 50,
                "offset": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recherche effectu√©e avec succ√®s"
          },
          "400": {
            "description": "Nom d'entreprise requis"
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      }
    },
    "/api/pronto/get-filter-options": {
      "get": {
        "summary": "Obtenir les options de filtres disponibles",
        "description": "Retourne toutes les options de filtres disponibles pour l'API Pronto (tailles d'entreprise, industries, localisations, etc.)",
        "tags": [
          "Pronto"
        ],
        "responses": {
          "200": {
            "description": "Options de filtres r√©cup√©r√©es avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "filters": {
                      "type": "object",
                      "properties": {
                        "companySizes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "industries": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "jobTitles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur"
          }
        }
      }
    },
    "/api/pronto/health-check": {
      "get": {
        "summary": "V√©rification de la sant√© de l'API Pronto",
        "description": "V√©rifie si l'API Pronto est accessible et si la cl√© API est valide",
        "tags": [
          "Pronto"
        ],
        "responses": {
          "200": {
            "description": "API Pronto accessible"
          },
          "401": {
            "description": "Cl√© API invalide"
          },
          "500": {
            "description": "Erreur de connexion"
          }
        }
      }
    },
    "/api/companies": {
      "get": { "summary": "Get all companies", "tags": ["Company"], "responses": { "200": { "description": "List of companies", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Company" } } } } } } },
      "post": { "summary": "Create a new company", "tags": ["Company"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CompanyInput" } } } }, "responses": { "201": { "description": "Company created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Company" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/companies/{id}": {
      "get": { "summary": "Get a company by ID", "tags": ["Company"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Company found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Company" } } } }, "404": { "description": "Company not found" } } },
      "put": { "summary": "Update a company by ID", "tags": ["Company"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CompanyInput" } } } }, "responses": { "200": { "description": "Company updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Company" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Company not found" } } },
      "delete": { "summary": "Delete a company by ID", "tags": ["Company"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Company deleted" }, "404": { "description": "Company not found" } } }
    },
    "/api/establishments": {
      "get": { "summary": "Get all establishments", "tags": ["Establishment"], "responses": { "200": { "description": "List of establishments", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Establishment" } } } } } } },
      "post": { "summary": "Create a new establishment", "tags": ["Establishment"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EstablishmentInput" } } } }, "responses": { "201": { "description": "Establishment created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Establishment" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/establishments/{id}": {
      "get": { "summary": "Get an establishment by ID", "tags": ["Establishment"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Establishment found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Establishment" } } } }, "404": { "description": "Establishment not found" } } },
      "put": { "summary": "Update an establishment by ID", "tags": ["Establishment"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EstablishmentInput" } } } }, "responses": { "200": { "description": "Establishment updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Establishment" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Establishment not found" } } },
      "delete": { "summary": "Delete an establishment by ID", "tags": ["Establishment"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Establishment deleted" }, "404": { "description": "Establishment not found" } } }
    },
    "/api/officers": {
      "get": { "summary": "Get all officers", "tags": ["Officer"], "responses": { "200": { "description": "List of officers", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Officer" } } } } } } },
      "post": { "summary": "Create a new officer", "tags": ["Officer"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OfficerInput" } } } }, "responses": { "201": { "description": "Officer created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Officer" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/officers/{id}": {
      "get": { "summary": "Get an officer by ID", "tags": ["Officer"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Officer found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Officer" } } } }, "404": { "description": "Officer not found" } } },
      "put": { "summary": "Update an officer by ID", "tags": ["Officer"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OfficerInput" } } } }, "responses": { "200": { "description": "Officer updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Officer" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Officer not found" } } },
      "delete": { "summary": "Delete an officer by ID", "tags": ["Officer"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Officer deleted" }, "404": { "description": "Officer not found" } } }
    },
    "/api/files": {
      "get": { "summary": "Get all files", "tags": ["File"], "responses": { "200": { "description": "List of files", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/File" } } } } } } },
      "post": { "summary": "Create a new file", "tags": ["File"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FileInput" } } } }, "responses": { "201": { "description": "File created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/File" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/files/{id}": {
      "get": { "summary": "Get a file by ID", "tags": ["File"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "File found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/File" } } } }, "404": { "description": "File not found" } } },
      "put": { "summary": "Update a file by ID", "tags": ["File"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FileInput" } } } }, "responses": { "200": { "description": "File updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/File" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "File not found" } } },
      "delete": { "summary": "Delete a file by ID", "tags": ["File"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "File deleted" }, "404": { "description": "File not found" } } }
    },
    "/api/users": {
      "get": { "summary": "Get all users", "tags": ["User"], "responses": { "200": { "description": "List of users", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/User" } } } } } } },
      "post": { "summary": "Create a new user", "tags": ["User"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserInput" } } } }, "responses": { "201": { "description": "User created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/users/{id}": {
      "get": { "summary": "Get a user by ID", "tags": ["User"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "User found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } }, "404": { "description": "User not found" } } },
      "put": { "summary": "Update a user by ID", "tags": ["User"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserInput" } } } }, "responses": { "200": { "description": "User updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "User not found" } } },
      "delete": { "summary": "Delete a user by ID", "tags": ["User"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "User deleted" }, "404": { "description": "User not found" } } }
    },
    "/api/beneficial_owners": {
      "get": { "summary": "Get all beneficial owners", "tags": ["BeneficialOwner"], "responses": { "200": { "description": "List of beneficial owners", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/BeneficialOwner" } } } } } } },
      "post": { "summary": "Create a new beneficial owner", "tags": ["BeneficialOwner"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BeneficialOwnerInput" } } } }, "responses": { "201": { "description": "Beneficial owner created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BeneficialOwner" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/beneficial_owners/{id}": {
      "get": { "summary": "Get a beneficial owner by ID", "tags": ["BeneficialOwner"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Beneficial owner found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BeneficialOwner" } } } }, "404": { "description": "Beneficial owner not found" } } },
      "put": { "summary": "Update a beneficial owner by ID", "tags": ["BeneficialOwner"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BeneficialOwnerInput" } } } }, "responses": { "200": { "description": "Beneficial owner updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BeneficialOwner" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Beneficial owner not found" } } },
      "delete": { "summary": "Delete a beneficial owner by ID", "tags": ["BeneficialOwner"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Beneficial owner deleted" }, "404": { "description": "Beneficial owner not found" } } }
    },
    "/api/financial_statements": {
      "get": { "summary": "Get all financial statements", "tags": ["FinancialStatement"], "responses": { "200": { "description": "List of financial statements", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/FinancialStatement" } } } } } } },
      "post": { "summary": "Create a new financial statement", "tags": ["FinancialStatement"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FinancialStatementInput" } } } }, "responses": { "201": { "description": "Financial statement created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FinancialStatement" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/financial_statements/{id}": {
      "get": { "summary": "Get a financial statement by ID", "tags": ["FinancialStatement"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Financial statement found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FinancialStatement" } } } }, "404": { "description": "Financial statement not found" } } },
      "put": { "summary": "Update a financial statement by ID", "tags": ["FinancialStatement"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FinancialStatementInput" } } } }, "responses": { "200": { "description": "Financial statement updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FinancialStatement" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Financial statement not found" } } },
      "delete": { "summary": "Delete a financial statement by ID", "tags": ["FinancialStatement"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Financial statement deleted" }, "404": { "description": "Financial statement not found" } } }
    },
    "/api/risk_assessments": {
      "get": { "summary": "Get all risk assessments", "tags": ["RiskAssessment"], "responses": { "200": { "description": "List of risk assessments", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/RiskAssessment" } } } } } } },
      "post": { "summary": "Create a new risk assessment", "tags": ["RiskAssessment"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RiskAssessmentInput" } } } }, "responses": { "201": { "description": "Risk assessment created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RiskAssessment" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/risk_assessments/{id}": {
      "get": { "summary": "Get a risk assessment by ID", "tags": ["RiskAssessment"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Risk assessment found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RiskAssessment" } } } }, "404": { "description": "Risk assessment not found" } } },
      "put": { "summary": "Update a risk assessment by ID", "tags": ["RiskAssessment"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RiskAssessmentInput" } } } }, "responses": { "200": { "description": "Risk assessment updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/RiskAssessment" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Risk assessment not found" } } },
      "delete": { "summary": "Delete a risk assessment by ID", "tags": ["RiskAssessment"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Risk assessment deleted" }, "404": { "description": "Risk assessment not found" } } }
    },
    "/api/bodacc_notices": {
      "get": { "summary": "Get all BODACC notices", "tags": ["BodaccNotice"], "responses": { "200": { "description": "List of BODACC notices", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/BodaccNotice" } } } } } } },
      "post": { "summary": "Create a new BODACC notice", "tags": ["BodaccNotice"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BodaccNoticeInput" } } } }, "responses": { "201": { "description": "BODACC notice created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BodaccNotice" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/bodacc_notices/{id}": {
      "get": { "summary": "Get a BODACC notice by ID", "tags": ["BodaccNotice"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "BODACC notice found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BodaccNotice" } } } }, "404": { "description": "BODACC notice not found" } } },
      "put": { "summary": "Update a BODACC notice by ID", "tags": ["BodaccNotice"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BodaccNoticeInput" } } } }, "responses": { "200": { "description": "BODACC notice updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BodaccNotice" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "BODACC notice not found" } } },
      "delete": { "summary": "Delete a BODACC notice by ID", "tags": ["BodaccNotice"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "BODACC notice deleted" }, "404": { "description": "BODACC notice not found" } } }
    },
    "/api/legal_acts": {
      "get": { "summary": "Get all legal acts", "tags": ["LegalAct"], "responses": { "200": { "description": "List of legal acts", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/LegalAct" } } } } } } },
      "post": { "summary": "Create a new legal act", "tags": ["LegalAct"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LegalActInput" } } } }, "responses": { "201": { "description": "Legal act created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LegalAct" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/legal_acts/{id}": {
      "get": { "summary": "Get a legal act by ID", "tags": ["LegalAct"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Legal act found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LegalAct" } } } }, "404": { "description": "Legal act not found" } } },
      "put": { "summary": "Update a legal act by ID", "tags": ["LegalAct"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LegalActInput" } } } }, "responses": { "200": { "description": "Legal act updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LegalAct" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Legal act not found" } } },
      "delete": { "summary": "Delete a legal act by ID", "tags": ["LegalAct"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Legal act deleted" }, "404": { "description": "Legal act not found" } } }
    },
    "/api/web_infos": {
      "get": { "summary": "Get all web infos", "tags": ["WebInfo"], "responses": { "200": { "description": "List of web infos", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/WebInfo" } } } } } } },
      "post": { "summary": "Create a new web info", "tags": ["WebInfo"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WebInfoInput" } } } }, "responses": { "201": { "description": "Web info created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WebInfo" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/web_infos/{id}": {
      "get": { "summary": "Get a web info by ID", "tags": ["WebInfo"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Web info found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WebInfo" } } } }, "404": { "description": "Web info not found" } } },
      "put": { "summary": "Update a web info by ID", "tags": ["WebInfo"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WebInfoInput" } } } }, "responses": { "200": { "description": "Web info updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WebInfo" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Web info not found" } } },
      "delete": { "summary": "Delete a web info by ID", "tags": ["WebInfo"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Web info deleted" }, "404": { "description": "Web info not found" } } }
    },
    "/api/emails": {
      "get": { "summary": "Get all emails", "tags": ["Email"], "responses": { "200": { "description": "List of emails", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Email" } } } } } } },
      "post": { "summary": "Create a new email", "tags": ["Email"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmailInput" } } } }, "responses": { "201": { "description": "Email created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Email" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/emails/{id}": {
      "get": { "summary": "Get an email by ID", "tags": ["Email"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Email found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Email" } } } }, "404": { "description": "Email not found" } } },
      "put": { "summary": "Update an email by ID", "tags": ["Email"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmailInput" } } } }, "responses": { "200": { "description": "Email updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Email" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Email not found" } } },
      "delete": { "summary": "Delete an email by ID", "tags": ["Email"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Email deleted" }, "404": { "description": "Email not found" } } }
    },
    "/api/addresses": {
      "get": { "summary": "Get all addresses", "tags": ["Address"], "responses": { "200": { "description": "List of addresses", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Address" } } } } } } },
      "post": { "summary": "Create a new address", "tags": ["Address"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AddressInput" } } } }, "responses": { "201": { "description": "Address created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Address" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/addresses/{id}": {
      "get": { "summary": "Get an address by ID", "tags": ["Address"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Address found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Address" } } } }, "404": { "description": "Address not found" } } },
      "put": { "summary": "Update an address by ID", "tags": ["Address"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AddressInput" } } } }, "responses": { "200": { "description": "Address updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Address" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Address not found" } } },
      "delete": { "summary": "Delete an address by ID", "tags": ["Address"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Address deleted" }, "404": { "description": "Address not found" } } }
    },
    "/api/subscriptions": {
      "get": { "summary": "Get all subscriptions", "tags": ["Subscription"], "responses": { "200": { "description": "List of subscriptions", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Subscription" } } } } } } },
      "post": { "summary": "Create a new subscription", "tags": ["Subscription"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubscriptionInput" } } } }, "responses": { "201": { "description": "Subscription created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Subscription" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/subscriptions/{id}": {
      "get": { "summary": "Get a subscription by ID", "tags": ["Subscription"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Subscription found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Subscription" } } } }, "404": { "description": "Subscription not found" } } },
      "put": { "summary": "Update a subscription by ID", "tags": ["Subscription"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SubscriptionInput" } } } }, "responses": { "200": { "description": "Subscription updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Subscription" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Subscription not found" } } },
      "delete": { "summary": "Delete a subscription by ID", "tags": ["Subscription"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Subscription deleted" }, "404": { "description": "Subscription not found" } } }
    },
    "/api/credit_logs": {
      "get": { "summary": "Get all credit logs", "tags": ["CreditLog"], "responses": { "200": { "description": "List of credit logs", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/CreditLog" } } } } } } },
      "post": { "summary": "Create a new credit log", "tags": ["CreditLog"], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreditLogInput" } } } }, "responses": { "201": { "description": "Credit log created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreditLog" } } } }, "400": { "description": "Invalid input" } } }
    },
    "/api/credit_logs/{id}": {
      "get": { "summary": "Get a credit log by ID", "tags": ["CreditLog"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "200": { "description": "Credit log found", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreditLog" } } } }, "404": { "description": "Credit log not found" } } },
      "put": { "summary": "Update a credit log by ID", "tags": ["CreditLog"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreditLogInput" } } } }, "responses": { "200": { "description": "Credit log updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreditLog" } } } }, "400": { "description": "Invalid input" }, "404": { "description": "Credit log not found" } } },
      "delete": { "summary": "Delete a credit log by ID", "tags": ["CreditLog"], "parameters": [ { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "format": "uuid" } } ], "responses": { "204": { "description": "Credit log deleted" }, "404": { "description": "Credit log not found" } } }
    },
    "/api/pronto/personas": {
      "get": { 
        "summary": "List all personas", 
        "description": "Retrieves a list of all personas available in the system",
        "tags": ["Pronto"], 
        "responses": { 
          "200": { 
            "description": "List of personas", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "personas": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ProntoPersona"
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "personas": [
                      {
                        "uuid": "8e1dcba0-f0bb-4071-99fc-f18ba6559ccc",
                        "name": "VP Grenoble",
                        "job_titles": ["VP of Engineering", "CTO"],
                        "location": ["Grenoble, Auvergne-Rh√¥ne-Alpes, France"],
                        "created_at": "2024-09-09T15:15:15.951Z",
                        "updated_at": "2024-09-09T15:15:15.951Z"
                      }
                    ]
                  }
                ]
              } 
            } 
          },
          "401": {
            "description": "Unauthorized - Invalid API key"
          },
          "500": {
            "description": "Internal server error"
          }
        } 
      }
    },
    "/api/pronto/personas/{id}": {
      "get": { 
        "summary": "Get a specific persona", 
        "description": "Retrieves details of a specific persona by UUID",
        "tags": ["Pronto"], 
        "parameters": [ 
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID of the persona to retrieve"
          } 
        ], 
        "responses": { 
          "200": { 
            "description": "Persona details", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ProntoPersona" },
                "example": {
                  "uuid": "8e1dcba0-f0bb-4071-99fc-f18ba6559ccc",
                  "name": "VP Grenoble",
                  "job_titles": ["VP of Engineering", "CTO"],
                  "location": ["Grenoble, Auvergne-Rh√¥ne-Alpes, France"],
                  "created_at": "2024-09-09T15:15:15.951Z",
                  "updated_at": "2024-09-09T15:15:15.951Z"
                }
              } 
            } 
          }, 
          "404": { "description": "Persona not found" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/lists": {
      "get": { 
        "summary": "R√©cup√©rer toutes les listes Pronto",
        "description": "R√©cup√®re la liste de toutes les listes d'entreprises cr√©√©es dans Pronto avec leurs informations de base",
        "tags": ["Pronto"], 
        "responses": { 
          "200": { 
            "description": "List of lists", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProntoList"
                  }
                },
                "example": [
                  {
                    "uuid": "123e4567-e89b-12d3-a456-426614174000",
                    "name": "Tech Companies",
                    "description": "List of technology companies",
                    "created_at": "2024-01-01T10:00:00.000Z",
                    "updated_at": "2024-01-01T10:00:00.000Z"
                  }
                ]
              } 
            } 
          },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      },
      "post": {
        "summary": "Cr√©er une liste d'entreprises dans Pronto",
        "description": "Cr√©e une nouvelle liste d'entreprises dans Pronto avec les informations fournies (nom, domaine, pays, LinkedIn URL)",
        "tags": ["Pronto"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nom de la liste"
                  },
                  "webhook_url": {
                    "type": "string",
                    "description": "URL de webhook (optionnel)"
                  },
                  "companies": {
                    "type": "array",
                    "description": "Liste des entreprises √† ajouter",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Nom de l'entreprise"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "Code pays (ex: FR, US)"
                        },
                        "domain": {
                          "type": "string",
                          "description": "Domaine de l'entreprise"
                        },
                        "linkedin_url": {
                          "type": "string",
                          "description": "URL LinkedIn de l'entreprise"
                        }
                      },
                      "required": ["name"]
                    }
                  }
                },
                "required": ["name", "companies"]
              },
              "example": {
                "name": "Ma liste d'entreprises",
                "webhook_url": "https://webhook.example.com",
                "companies": [
                  {
                    "name": "Pronto",
                    "country_code": "FR",
                    "domain": "prontohq.com",
                    "linkedin_url": "https://www.linkedin.com/company/prontohq"
                  },
                  {
                    "name": "Google",
                    "country_code": "US",
                    "domain": "google.com",
                    "linkedin_url": "https://www.linkedin.com/company/google"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Liste cr√©√©e avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "list": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string", "description": "ID de la liste cr√©√©e" },
                        "name": { "type": "string", "description": "Nom de la liste" },
                        "webhook_url": { "type": "string", "description": "URL de webhook" },
                        "companies_count": { "type": "integer", "description": "Nombre d'entreprises" },
                        "companies": { "type": "array", "description": "Liste des entreprises" },
                        "created_at": { "type": "string", "format": "date-time" },
                        "pronto_response": { "type": "object", "description": "R√©ponse compl√®te de Pronto" }
                      }
                    },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "success": true,
                  "list": {
                    "id": "df62412c-55a6-4fe2-af91-0b74b9e0f454",
                    "name": "Ma liste d'entreprises",
                    "webhook_url": "https://webhook.example.com",
                    "companies_count": 2,
                    "companies": [
                      {
                        "name": "Pronto",
                        "country_code": "FR",
                        "domain": "prontohq.com",
                        "linkedin_url": "https://www.linkedin.com/company/prontohq"
                      }
                    ],
                    "created_at": "2025-08-06T21:06:07.918Z",
                    "pronto_response": {
                      "id": "df62412c-55a6-4fe2-af91-0b74b9e0f454",
                      "linkedin_id": "7358966630862757888",
                      "type": "companies"
                    }
                  },
                  "message": "Liste \"Ma liste d'entreprises\" cr√©√©e avec succ√®s avec 2 entreprise(s)"
                }
              }
            }
          },
          "400": { "description": "Param√®tres invalides" },
          "401": { "description": "Cl√© API invalide" },
          "429": { "description": "Limite de taux d√©pass√©e" },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/api/pronto/lists/{id}": {
      "get": { 
        "summary": "Retrieve a specific list", 
        "description": "Retrieves details of a specific list by UUID",
        "tags": ["Pronto"], 
        "parameters": [ 
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID of the list to retrieve"
          } 
        ], 
        "responses": { 
          "200": { 
            "description": "List details", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ProntoList" },
                "example": {
                  "uuid": "123e4567-e89b-12d3-a456-426614174000",
                  "name": "Tech Companies",
                  "description": "List of technology companies",
                  "created_at": "2024-01-01T10:00:00.000Z",
                  "updated_at": "2024-01-01T10:00:00.000Z"
                }
              } 
            } 
          }, 
          "404": { "description": "List not found" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      },
      "put": { 
        "summary": "Update a list", 
        "description": "Updates an existing list with new information",
        "tags": ["Pronto"], 
        "parameters": [ 
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID of the list to update"
          } 
        ], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "name": { "type": "string", "description": "Name of the list" },
                  "description": { "type": "string", "description": "Description of the list" }
                }
              },
              "example": {
                "name": "Updated Tech List",
                "description": "Updated list of technology companies"
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "List updated", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ProntoList" },
                "example": {
                  "uuid": "123e4567-e89b-12d3-a456-426614174000",
                  "name": "Updated Tech List",
                  "description": "Updated list of technology companies",
                  "created_at": "2024-01-01T10:00:00.000Z",
                  "updated_at": "2024-01-02T10:00:00.000Z"
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" }, 
          "404": { "description": "List not found" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/searches": {
      "get": {
        "summary": "Liste des recherches Pronto disponibles",
        "description": "R√©cup√®re la liste de toutes les recherches Pronto disponibles avec leurs informations de base (nom, nombre de leads, date de cr√©ation)",
        "tags": ["Pronto"],
        "responses": {
          "200": {
            "description": "Liste des recherches r√©cup√©r√©e avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "searches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "description": "ID de la recherche" },
                          "name": { "type": "string", "description": "Nom de la recherche" },
                          "leads_count": { "type": "integer", "description": "Nombre de leads" },
                          "created_at": { "type": "string", "format": "date-time" },
                          "access_url": { "type": "string", "description": "URL d'acc√®s aux leads" }
                        }
                      }
                    },
                    "total": { "type": "integer", "description": "Nombre total de recherches" },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "success": true,
                  "searches": [
                    {
                      "id": "39775257-9a6f-433a-ac2c-2cd3a39605a0",
                      "name": "[Atlas Digital] Resp. Marketing - 1 / 50",
                      "leads_count": 12,
                      "created_at": "2025-08-06T14:59:33.284Z",
                      "access_url": "/api/pronto-workflows/search-leads/39775257-9a6f-433a-ac2c-2cd3a39605a0"
                    }
                  ],
                  "total": 22,
                  "message": "22 recherches disponibles"
                }
              }
            }
          },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/api/pronto/searches/{id}": {
      "get": { 
        "summary": "R√©cup√©rer les d√©tails d'une recherche Pronto",
        "description": "R√©cup√®re les informations d√©taill√©es d'une recherche sp√©cifique dans Pronto incluant les leads/contacts trouv√©s et les m√©tadonn√©es",
        "tags": ["Pronto"], 
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID unique de la recherche",
            "example": "df62412c-55a6-4fe2-af91-0b74b9e0f454"
          },
          {
            "name": "include_leads",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": true },
            "description": "Inclure les leads/contacts dans la r√©ponse"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "minimum": 1, "maximum": 1000 },
            "description": "Nombre maximum de leads √† retourner"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "minimum": 0 },
            "description": "D√©calage pour la pagination"
          }
        ],
        "responses": { 
          "200": { 
            "description": "Search details", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ProntoSearch" },
                "example": {
                  "uuid": "123e4567-e89b-12d3-a456-426614174000",
                  "name": "Tech Companies in Paris",
                  "query": {
                    "industry": "Technology",
                    "location": "Paris, France",
                    "size": "10-50"
                  },
                  "created_at": "2024-01-01T10:00:00.000Z",
                  "updated_at": "2024-01-01T10:00:00.000Z"
                }
              } 
            } 
          }, 
          "404": { "description": "Search not found" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/searches/{id}/leads": {
      "get": { 
        "summary": "Retrieve leads from a specific search", 
        "description": "Retrieves all leads/contacts from a specific saved search with pagination support",
        "tags": ["Pronto"], 
        "parameters": [ 
          { 
            "name": "id", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID of the search to retrieve leads from"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "minimum": 1 },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "minimum": 1, "maximum": 1000 },
            "description": "Number of leads per page"
          }
        ], 
        "responses": { 
          "200": { 
            "description": "Leads from the search", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "leads": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProntoContact"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": { "type": "integer", "description": "Current page number" },
                        "limit": { "type": "integer", "description": "Number of items per page" },
                        "total": { "type": "integer", "description": "Total number of leads" },
                        "pages": { "type": "integer", "description": "Total number of pages" }
                      }
                    }
                  }
                },
                "example": {
                  "leads": [
                    {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "john.doe@company.com",
                      "job_title": "CEO",
                      "company": "Tech Corp",
                      "linkedin_url": "https://linkedin.com/in/johndoe",
                      "phone": "+33123456789"
                    }
                  ],
                  "pagination": {
                    "page": 1,
                    "limit": 100,
                    "total": 60,
                    "pages": 1
                  }
                }
              } 
            } 
          }, 
          "404": { "description": "Search not found" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/status": {
      "get": {
        "summary": "Statut des services Pronto",
        "description": "V√©rifie le statut de tous les services Pronto et indique quels endpoints sont disponibles ou indisponibles",
        "tags": ["Pronto"],
        "responses": {
          "200": {
            "description": "Statut des services r√©cup√©r√©",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "status": {
                      "type": "object",
                      "properties": {
                        "timestamp": { "type": "string", "format": "date-time" },
                        "services": {
                          "type": "object",
                          "properties": {
                            "authentication": {
                              "type": "object",
                              "properties": {
                                "available": { "type": "boolean" },
                                "message": { "type": "string" }
                              }
                            },
                            "searches": {
                              "type": "object",
                              "properties": {
                                "available": { "type": "boolean" },
                                "message": { "type": "string" }
                              }
                            },
                            "lists_creation": {
                              "type": "object",
                              "properties": {
                                "available": { "type": "boolean" },
                                "message": { "type": "string" }
                              }
                            },
                            "leads_extraction": {
                              "type": "object",
                              "properties": {
                                "available": { "type": "boolean" },
                                "message": { "type": "string" }
                              }
                            }
                          }
                        },
                        "available_endpoints": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "unavailable_endpoints": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "alternatives": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": { "type": "string" },
                              "endpoint": { "type": "string" },
                              "available": { "type": "boolean" }
                            }
                          }
                        }
                      }
                    },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "success": true,
                  "status": {
                    "timestamp": "2025-08-06T21:08:13.856Z",
                    "services": {
                      "authentication": {
                        "available": true,
                        "message": "Authentification r√©ussie"
                      },
                      "searches": {
                        "available": true,
                        "message": "Endpoint /searches disponible"
                      },
                      "lists_creation": {
                        "available": true,
                        "message": "Endpoint /lists disponible"
                      },
                      "leads_extraction": {
                        "available": false,
                        "message": "Endpoints d'extraction directe indisponibles"
                      }
                    },
                    "available_endpoints": [
                      "GET /api/pronto/searches",
                      "POST /api/pronto/lists"
                    ],
                    "unavailable_endpoints": [
                      "POST /api/pronto/search-leads",
                      "POST /api/pronto/leads/extract"
                    ],
                    "alternatives": [
                      {
                        "description": "Consulter les recherches existantes",
                        "endpoint": "GET /api/pronto/searches",
                        "available": true
                      }
                    ]
                  },
                  "message": "Statut des services Pronto r√©cup√©r√©"
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors de la v√©rification du statut"
          }
        }
      }
    },
    "/api/pronto/workflow/global-results": {
      "get": {
        "summary": "Workflow global - R√©sultats combin√©s de toutes les recherches Pronto",
        "description": "Workflow automatique qui : 1) R√©cup√®re tous les IDs de recherches depuis /api/pronto/searches, 2) Pour chaque ID, r√©cup√®re les d√©tails depuis /api/pronto/searches/{id}, 3) Combine tous les r√©sultats en un seul tableau, 4) Applique un filtre optionnel par nom d'entreprise, 5) Retourne la structure compl√®te avec leads et companies",
        "tags": ["Pronto Workflow"],
        "parameters": [
          {
            "name": "company_filter",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Filtre par nom d'entreprise. Peut contenir plusieurs noms s√©par√©s par des virgules. La recherche est insensible √† la casse et utilise une correspondance partielle.",
            "example": "Google,Microsoft,Apple"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1000, "minimum": 1, "maximum": 10000 },
            "description": "Nombre maximum de leads √† retourner au total"
          },
          {
            "name": "title_filter",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Filtre par titre/poste du lead. Peut contenir plusieurs titres s√©par√©s par des virgules.",
            "example": "CEO,CTO,Manager"
          },
          {
            "name": "lead_location_filter",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Filtre par localisation du lead. Peut contenir plusieurs localisations s√©par√©es par des virgules.",
            "example": "Paris,London,New York"
          },
          {
            "name": "employee_range_filter",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Filtre par taille d'entreprise (employee_range). Peut contenir plusieurs tailles s√©par√©es par des virgules.",
            "example": "1-10,11-50,51-200"
          },
          {
            "name": "company_location_filter",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Filtre par localisation de l'entreprise. Peut contenir plusieurs localisations s√©par√©es par des virgules.",
            "example": "Paris,London,Berlin"
          },
          {
            "name": "industry_filter",
            "in": "query",
            "required": false,
            "schema": { "type": "string" },
            "description": "Filtre par secteur d'activit√© de l'entreprise. Peut contenir plusieurs secteurs s√©par√©s par des virgules.",
            "example": "Technology,Finance,Healthcare"
          },
          {
            "name": "include_search_details",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false },
            "description": "Inclure les d√©tails des recherches dans la r√©ponse"
          }
        ],
        "responses": {
          "200": {
            "description": "R√©sultats globaux r√©cup√©r√©s avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "total_searches": { "type": "integer", "description": "Nombre total de recherches trait√©es" },
                    "total_leads": { "type": "integer", "description": "Nombre total de leads trouv√©s" },
                    "filtered_leads": { "type": "integer", "description": "Nombre de leads apr√®s filtrage" },
                    "unique_companies": { "type": "integer", "description": "Nombre d'entreprises uniques" },
                    "applied_filters": {
                      "type": "object",
                      "properties": {
                        "company_names": {
                          "type": "array",
                          "items": { "type": "string" },
                          "description": "Noms d'entreprises utilis√©s pour le filtrage"
                        }
                      }
                    },
                    "leads": {
                      "type": "array",
                      "description": "Tous les leads combin√©s avec structure Pronto",
                      "items": {
                        "type": "object",
                        "properties": {
                          "search_id": { "type": "string", "description": "ID de la recherche d'origine" },
                          "search_name": { "type": "string", "description": "Nom de la recherche d'origine" },
                          "lead": { "type": "object", "description": "Donn√©es du lead (structure Pronto compl√®te)" },
                          "company": { "type": "object", "description": "Donn√©es de l'entreprise (structure Pronto compl√®te)" }
                        }
                      }
                    },
                    "processing_time": { "type": "number", "description": "Temps de traitement en secondes" },
                    "message": { "type": "string" }
                  }
                },
                "example": {
                  "success": true,
                  "total_searches": 5,
                  "total_leads": 1250,
                  "filtered_leads": 45,
                  "unique_companies": 12,
                  "applied_filters": {
                    "company_names": ["Google", "Microsoft"],
                    "titles": ["CEO", "CTO"],
                    "lead_locations": ["Paris"],
                    "employee_ranges": ["51-200"],
                    "company_locations": ["Paris", "London"],
                    "industries": ["Technology"]
                  },
                  "leads": [
                    {
                      "search_id": "search-123",
                      "search_name": "Tech CEOs Paris",
                      "lead": {
                        "first_name": "Jean",
                        "last_name": "Dupont",
                        "title": "CEO",
                        "most_probable_email": "jean@google.com"
                      },
                      "company": {
                        "name": "Google France",
                        "industry": "Technology",
                        "website": "google.com"
                      }
                    }
                  ],
                  "processing_time": 12.5,
                  "message": "45 leads trouv√©s apr√®s filtrage sur 1250 leads totaux"
                }
              }
            }
          },
          "400": { "description": "Param√®tres invalides" },
          "401": { "description": "Cl√© API invalide" },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/api/pronto/accounts/profiles": {
      "post": { 
        "summary": "Get profiles in a company", 
        "description": "Retrieves employee profiles and contact information for a specific company",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "company_name": { "type": "string", "description": "Name of the company" },
                  "domain": { "type": "string", "description": "Company domain/website" },
                  "limit": { "type": "integer", "description": "Maximum number of profiles to return" }
                },
                "required": ["company_name"]
              },
              "example": {
                "company_name": "Google",
                "domain": "google.com",
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Company profiles", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "profiles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProntoContact"
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of profiles found" }
                  }
                },
                "example": {
                  "profiles": [
                    {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "john.doe@google.com",
                      "job_title": "Software Engineer",
                      "company": "Google",
                      "linkedin_url": "https://linkedin.com/in/johndoe"
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/accounts/headcount": {
      "post": { 
        "summary": "Get headcount details", 
        "description": "Retrieves detailed headcount information and employee count evolution for a company",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "company_name": { "type": "string", "description": "Name of the company" },
                  "domain": { "type": "string", "description": "Company domain/website" }
                },
                "required": ["company_name"]
              },
              "example": {
                "company_name": "Google",
                "domain": "google.com"
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Headcount details", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "company": { "type": "string", "description": "Company name" },
                    "current_headcount": { "type": "integer", "description": "Current number of employees" },
                    "headcount_history": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": { "type": "string", "format": "date", "description": "Date of headcount record" },
                          "count": { "type": "integer", "description": "Number of employees on that date" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "company": "Google",
                  "current_headcount": 150000,
                  "headcount_history": [
                    {
                      "date": "2023-01-01",
                      "count": 140000
                    },
                    {
                      "date": "2024-01-01",
                      "count": 150000
                    }
                  ]
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/accounts/extract": {
      "post": { 
        "summary": "Extract account search results", 
        "description": "Extracts company data based on search criteria and filters",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "query": { "type": "string", "description": "Search query for companies" },
                  "filters": {
                    "type": "object",
                    "properties": {
                      "industry": { "type": "string", "description": "Industry filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "size": { "type": "string", "description": "Company size filter" },
                      "funding": { "type": "string", "description": "Funding status filter" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of results to return" }
                },
                "required": ["query"]
              },
              "example": {
                "query": "technology companies",
                "filters": {
                  "industry": "Technology",
                  "location": "Paris, France",
                  "size": "10-50"
                },
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Account search results", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "accounts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProntoAccount"
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of accounts found" }
                  }
                },
                "example": {
                  "accounts": [
                    {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "TechCorp",
                      "website": "https://techcorp.com",
                      "linkedin_url": "https://linkedin.com/company/techcorp",
                      "industry": "Technology",
                      "size": "10-50",
                      "location": "Paris, France"
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/leads/extract": {
      "post": { 
        "summary": "Extraction de leads avec filtres avanc√©s (INDISPONIBLE)",
        "description": "‚ö†Ô∏è ENDPOINT TEMPORAIREMENT INDISPONIBLE - L'API Pronto a modifi√© ses endpoints. Retourne une erreur 503 avec des alternatives.",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "query": { "type": "string", "description": "Search query for contacts" },
                  "filters": {
                    "type": "object",
                    "properties": {
                      "job_title": { "type": "string", "description": "Job title filter" },
                      "company": { "type": "string", "description": "Company filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "seniority": { "type": "string", "description": "Seniority level filter" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of results to return" }
                },
                "required": ["query"]
              },
              "example": {
                "query": "software engineers",
                "filters": {
                  "job_title": "Software Engineer",
                  "location": "Paris, France",
                  "seniority": "Senior"
                },
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Lead search results", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "leads": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProntoContact"
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of leads found" }
                  }
                },
                "example": {
                  "leads": [
                    {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "first_name": "Jane",
                      "last_name": "Smith",
                      "email": "jane.smith@techcorp.com",
                      "job_title": "Senior Software Engineer",
                      "company": "TechCorp",
                      "linkedin_url": "https://linkedin.com/in/janesmith"
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/leads": {
  "post": {
    "summary": "Cr√©er un lead sur ProntoHQ",
    "description": "Cr√©e un lead via l'API ProntoHQ (https://app.prontohq.com/api/v2/leads).",
    "tags": ["Pronto"],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "search_url": { "type": "string", "description": "URL de recherche Pronto" },
              "webhook_url": { "type": "string", "description": "URL du webhook pour recevoir les r√©sultats" },
              "name": { "type": "string", "description": "Nom du lead" },
              "streaming": { "type": "boolean", "description": "Activer le streaming des r√©sultats" },
              "custom": {
                "type": "object",
                "properties": {
                  "hubspot_id": { "type": "string", "description": "ID Hubspot personnalis√©" }
                }
              },
              "limit": { "type": "integer", "description": "Nombre maximum de leads √† retourner" }
            },
            "required": ["search_url", "webhook_url", "name", "streaming", "custom", "limit"]
          },
          "example": {
            "search_url": "https://app.prontohq.com/search/123456",
            "webhook_url": "https://monapp.com/webhook",
            "name": "Ma recherche de leads",
            "streaming": true,
            "custom": { "hubspot_id": "134567" },
            "limit": 100
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Lead cr√©√© avec succ√®s sur ProntoHQ",
        "content": {
          "application/json": {
            "schema": { "type": "object" },
            "example": { "id": "lead_123456", "status": "created" }
          }
        }
      },
      "400": { "description": "Requ√™te invalide" },
      "401": { "description": "Cl√© API invalide" },
      "500": { "description": "Erreur serveur interne" }
    }
  }
},
    "/api/pronto/leads/company": {
      "post": { 
        "summary": "Extract leads from a company", 
        "description": "Extracts all available contacts/leads from a specific company",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "company_name": { "type": "string", "description": "Name of the company" },
                  "domain": { "type": "string", "description": "Company domain/website" },
                  "limit": { "type": "integer", "description": "Maximum number of leads to return" }
                },
                "required": ["company_name"]
              },
              "example": {
                "company_name": "Google",
                "domain": "google.com",
                "limit": 50
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Company leads", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "company": { "type": "string", "description": "Company name" },
                    "leads": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProntoContact"
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of leads found" }
                  }
                },
                "example": {
                  "company": "Google",
                  "leads": [
                    {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "john.doe@google.com",
                      "job_title": "Software Engineer",
                      "company": "Google",
                      "linkedin_url": "https://linkedin.com/in/johndoe"
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/enrichments/account": {
      "post": { 
        "summary": "Single account enrichment", 
        "description": "Enriches a single company account with additional firmographic data",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "company_name": { "type": "string", "description": "Name of the company" },
                  "domain": { "type": "string", "description": "Company domain/website" },
                  "linkedin_url": { "type": "string", "description": "Company LinkedIn URL" }
                },
                "required": ["company_name"]
              },
              "example": {
                "company_name": "TechCorp",
                "domain": "techcorp.com",
                "linkedin_url": "https://linkedin.com/company/techcorp"
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Enriched account data", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ProntoAccount" },
                "example": {
                  "uuid": "123e4567-e89b-12d3-a456-426614174000",
                  "name": "TechCorp",
                  "website": "https://techcorp.com",
                  "linkedin_url": "https://linkedin.com/company/techcorp",
                  "industry": "Technology",
                  "size": "10-50",
                  "location": "Paris, France"
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/enrichments/lead": {
      "post": { 
        "summary": "Single lead enrichment", 
        "description": "Enriches a single contact/lead with additional professional information",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "first_name": { "type": "string", "description": "Contact's first name" },
                  "last_name": { "type": "string", "description": "Contact's last name" },
                  "email": { "type": "string", "description": "Contact's email" },
                  "company": { "type": "string", "description": "Contact's company" },
                  "linkedin_url": { "type": "string", "description": "Contact's LinkedIn URL" }
                },
                "required": ["first_name", "last_name"]
              },
              "example": {
                "first_name": "John",
                "last_name": "Doe",
                "email": "john.doe@techcorp.com",
                "company": "TechCorp",
                "linkedin_url": "https://linkedin.com/in/johndoe"
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Enriched lead data", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ProntoContact" },
                "example": {
                  "uuid": "123e4567-e89b-12d3-a456-426614174000",
                  "first_name": "John",
                  "last_name": "Doe",
                  "email": "john.doe@techcorp.com",
                  "phone": "+33123456789",
                  "job_title": "Software Engineer",
                  "company": "TechCorp",
                  "linkedin_url": "https://linkedin.com/in/johndoe"
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/enrichments/contact": {
      "post": { 
        "summary": "Single contact enrichment", 
        "description": "Enriches a single contact with email and phone data",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "first_name": { "type": "string", "description": "Contact's first name" },
                  "last_name": { "type": "string", "description": "Contact's last name" },
                  "company": { "type": "string", "description": "Contact's company" },
                  "domain": { "type": "string", "description": "Company domain" }
                },
                "required": ["first_name", "last_name", "company"]
              },
              "example": {
                "first_name": "John",
                "last_name": "Doe",
                "company": "TechCorp",
                "domain": "techcorp.com"
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Enriched contact data", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ProntoContact" },
                "example": {
                  "uuid": "123e4567-e89b-12d3-a456-426614174000",
                  "first_name": "John",
                  "last_name": "Doe",
                  "email": "john.doe@techcorp.com",
                  "phone": "+33123456789",
                  "job_title": "Software Engineer",
                  "company": "TechCorp",
                  "linkedin_url": "https://linkedin.com/in/johndoe"
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/enrichments/contacts/bulk": {
      "post": { 
        "summary": "Bulk contact enrichment", 
        "description": "Enriches multiple contacts with phone data in batch. Requires X-API-KEY header.",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "contacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "firstname": { "type": "string", "description": "Contact's first name" },
                        "lastname": { "type": "string", "description": "Contact's last name" },
                        "company_name": { "type": "string", "description": "Contact's company name" },
                        "linkedin_url": { "type": "string", "description": "LinkedIn profile URL" },
                        "domain": { "type": "string", "description": "Company domain (URL)" }
                      },
                      "required": ["firstname", "lastname", "company_name"]
                    }
                  },
                  "enrichment_type": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Types of enrichment requested (e.g. phone, email, etc.)"
                  }
                },
                "required": ["contacts", "enrichment_type"]
              },
              "example": {
                "contacts": [
                  {
                    "firstname": "H√©l√®ne",
                    "lastname": "Mariette",
                    "company_name": "Vivinnov",
                    "linkedin_url": "https://www.linkedin.com/company/71078455",
                    "domain": "http://www.vivinnov.com"
                  }
                ],
                "enrichment_type": ["phone"]
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Bulk enriched contact data", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "enrichment_id": { "type": "string", "description": "ID de l'enrichissement en base Pronto" }
                  }
                },
                "example": {
                  "enrichment_id": "fbbf2eef-b56f-4bbc-8b51-ada6ca9e4cac"
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/intent/hiring": {
      "post": { 
        "summary": "Find companies hiring", 
        "description": "Identifies companies that are currently hiring based on job postings and recruitment activity",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "industry": { "type": "string", "description": "Industry filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "size": { "type": "string", "description": "Company size filter" },
                      "job_titles": { "type": "array", "items": { "type": "string" }, "description": "Specific job titles to look for" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of results to return" }
                }
              },
              "example": {
                "filters": {
                  "industry": "Technology",
                  "location": "Paris, France",
                  "job_titles": ["Software Engineer", "Product Manager"]
                },
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Companies hiring", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "hiring_companies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "company": { "$ref": "#/components/schemas/ProntoAccount" },
                          "job_count": { "type": "integer", "description": "Number of open positions" },
                          "recent_postings": { "type": "array", "items": { "type": "string" }, "description": "Recent job titles posted" }
                        }
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of hiring companies found" }
                  }
                },
                "example": {
                  "hiring_companies": [
                    {
                      "company": {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "name": "TechCorp",
                        "industry": "Technology",
                        "size": "10-50",
                        "location": "Paris, France"
                      },
                      "job_count": 5,
                      "recent_postings": ["Software Engineer", "Product Manager"]
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/intent/growing": {
      "post": { 
        "summary": "Find companies growing", 
        "description": "Identifies companies that are experiencing growth based on hiring, funding, and expansion indicators",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "industry": { "type": "string", "description": "Industry filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "growth_type": { "type": "string", "enum": ["hiring", "funding", "expansion"], "description": "Type of growth to focus on" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of results to return" }
                }
              },
              "example": {
                "filters": {
                  "industry": "Technology",
                  "location": "Paris, France",
                  "growth_type": "hiring"
                },
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Growing companies", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "growing_companies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "company": { "$ref": "#/components/schemas/ProntoAccount" },
                          "growth_indicators": { "type": "array", "items": { "type": "string" }, "description": "Signs of growth" },
                          "growth_score": { "type": "number", "description": "Growth score (0-100)" }
                        }
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of growing companies found" }
                  }
                },
                "example": {
                  "growing_companies": [
                    {
                      "company": {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "name": "TechCorp",
                        "industry": "Technology",
                        "size": "10-50",
                        "location": "Paris, France"
                      },
                      "growth_indicators": ["Recent hiring", "New office opening"],
                      "growth_score": 85
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/intent/lookalikes": {
      "post": { 
        "summary": "Find companies lookalikes", 
        "description": "Finds companies similar to a target company based on industry, size, and characteristics",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "target_company": { "type": "string", "description": "Name of the target company" },
                  "filters": {
                    "type": "object",
                    "properties": {
                      "location": { "type": "string", "description": "Location filter" },
                      "size_range": { "type": "string", "description": "Size range filter" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of results to return" }
                },
                "required": ["target_company"]
              },
              "example": {
                "target_company": "Google",
                "filters": {
                  "location": "Paris, France",
                  "size_range": "10-50"
                },
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Similar companies", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "similar_companies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "company": { "$ref": "#/components/schemas/ProntoAccount" },
                          "similarity_score": { "type": "number", "description": "Similarity score (0-100)" },
                          "common_characteristics": { "type": "array", "items": { "type": "string" }, "description": "Shared characteristics" }
                        }
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of similar companies found" }
                  }
                },
                "example": {
                  "similar_companies": [
                    {
                      "company": {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "name": "TechCorp",
                        "industry": "Technology",
                        "size": "10-50",
                        "location": "Paris, France"
                      },
                      "similarity_score": 85,
                      "common_characteristics": ["Same industry", "Similar size", "Same location"]
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/intent/new-hires": {
      "post": { 
        "summary": "Find new hires", 
        "description": "Identifies people who have recently started new positions at companies",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "company": { "type": "string", "description": "Company filter" },
                      "job_title": { "type": "string", "description": "Job title filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "time_period": { "type": "string", "enum": ["1_month", "3_months", "6_months"], "description": "Time period for new hires" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of results to return" }
                }
              },
              "example": {
                "filters": {
                  "company": "Google",
                  "job_title": "Software Engineer",
                  "time_period": "3_months"
                },
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "New hires data", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "new_hires": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": { "$ref": "#/components/schemas/ProntoContact" },
                          "start_date": { "type": "string", "format": "date", "description": "Start date at new position" },
                          "previous_company": { "type": "string", "description": "Previous company" }
                        }
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of new hires found" }
                  }
                },
                "example": {
                  "new_hires": [
                    {
                      "contact": {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "first_name": "John",
                        "last_name": "Doe",
                        "email": "john.doe@google.com",
                        "job_title": "Software Engineer",
                        "company": "Google",
                        "linkedin_url": "https://linkedin.com/in/johndoe"
                      },
                      "start_date": "2024-01-01",
                      "previous_company": "Microsoft"
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/intent/job-changes": {
      "post": { 
        "summary": "Track job changes", 
        "description": "Tracks people who have changed jobs or positions recently",
        "tags": ["Pronto"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "filters": {
                    "type": "object",
                    "properties": {
                      "company": { "type": "string", "description": "Company filter" },
                      "job_title": { "type": "string", "description": "Job title filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "time_period": { "type": "string", "enum": ["1_month", "3_months", "6_months"], "description": "Time period for job changes" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of results to return" }
                }
              },
              "example": {
                "filters": {
                  "company": "Google",
                  "time_period": "3_months"
                },
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Job changes data", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "job_changes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contact": { "$ref": "#/components/schemas/ProntoContact" },
                          "change_date": { "type": "string", "format": "date", "description": "Date of job change" },
                          "previous_position": { "type": "string", "description": "Previous job title" },
                          "new_position": { "type": "string", "description": "New job title" },
                          "previous_company": { "type": "string", "description": "Previous company" },
                          "new_company": { "type": "string", "description": "New company" }
                        }
                      }
                    },
                    "total": { "type": "integer", "description": "Total number of job changes found" }
                  }
                },
                "example": {
                  "job_changes": [
                    {
                      "contact": {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "first_name": "John",
                        "last_name": "Doe",
                        "email": "john.doe@google.com",
                        "job_title": "Senior Software Engineer",
                        "company": "Google",
                        "linkedin_url": "https://linkedin.com/in/johndoe"
                      },
                      "change_date": "2024-01-01",
                      "previous_position": "Software Engineer",
                      "new_position": "Senior Software Engineer",
                      "previous_company": "Google",
                      "new_company": "Google"
                    }
                  ],
                  "total": 1
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/companies/enrich": {
      "get": { 
        "summary": "Enrichir une entreprise avec ProntoHQ", 
        "description": "Enrichit les donn√©es d'une entreprise en utilisant l'API ProntoHQ v2. Utilise l'endpoint /accounts/single_enrich de Pronto pour obtenir des informations d√©taill√©es sur l'entreprise.",
        "tags": ["Pronto"], 
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "Nom de l'entreprise √† enrichir"
          }
        ],
        "responses": { 
          "200": { 
            "description": "Donn√©es enrichies de l'entreprise", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "found": { "type": "boolean", "description": "Indique si l'entreprise a √©t√© trouv√©e" }
                  }
                },
                "example": {
                  "found": true,
                  "name": "SFS France | Construction",
                  "description": "SFS France, situ√©e √† Valence dans la Dr√¥me est sp√©cialiste...",
                  "industry": "Mechanical Or Industrial Engineering",
                  "type": "Public Company",
                  "employeeCount": 73,
                  "website": "https://fr.sfs.com/",
                  "headquarters": {
                    "country": "France",
                    "city": "Valence",
                    "postalCode": "26000"
                  }
                }
              } 
            } 
          }, 
          "400": { "description": "Param√®tre 'name' manquant" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/credits": {
      "get": { 
        "summary": "Get current credit balance", 
        "description": "Retrieves the current credit balance for your Pronto API account",
        "tags": ["Pronto"], 
        "responses": { 
          "200": { 
            "description": "Credit balance", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "credits": { "type": "integer", "description": "Current credit balance" },
                    "credits_used": { "type": "integer", "description": "Total credits used" },
                    "credits_total": { "type": "integer", "description": "Total credits purchased" }
                  }
                },
                "example": {
                  "credits": 950,
                  "credits_used": 50,
                  "credits_total": 1000
                }
              } 
            } 
          },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/account": {
      "get": { 
        "summary": "Get account information", 
        "description": "Retrieves account information and settings for your Pronto API account",
        "tags": ["Pronto"], 
        "responses": { 
          "200": { 
            "description": "Account information", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "account_id": { "type": "string", "description": "Account identifier" },
                    "email": { "type": "string", "description": "Account email" },
                    "plan": { "type": "string", "description": "Current subscription plan" },
                    "created_at": { "type": "string", "format": "date-time", "description": "Account creation date" },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "timezone": { "type": "string", "description": "Account timezone" },
                        "language": { "type": "string", "description": "Account language" }
                      }
                    }
                  }
                },
                "example": {
                  "account_id": "acc_123456789",
                  "email": "user@example.com",
                  "plan": "Professional",
                  "created_at": "2024-01-01T10:00:00.000Z",
                  "settings": {
                    "timezone": "Europe/Paris",
                    "language": "en"
                  }
                }
              } 
            } 
          },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto-workflows/all-searches-complete": {
      "get": { 
        "summary": "Get all searches with complete data", 
        "description": "Automated workflow that combines all three endpoints: get all searches, get search details, and get leads for each search. No parameters needed - just call this endpoint to get everything!",
        "tags": ["Pronto Workflows"], 
        "parameters": [
          {
            "name": "include_leads",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": true },
            "description": "Whether to include leads for each search"
          },
          {
            "name": "leads_per_search",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 50, "minimum": 1, "maximum": 200 },
            "description": "Number of leads to extract per search"
          },
          {
            "name": "include_enrichment",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false },
            "description": "Whether to enrich lead data with additional information"
          },
          {
            "name": "max_searches",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 20, "minimum": 1, "maximum": 50 },
            "description": "Maximum number of searches to process (for performance)"
          },
          {
            "name": "activitePrincipaleEtablissement",
            "in": "query",
            "description": "Filtre optionnel : ne retourne que les entreprises dont le champ activitePrincipaleEtablissement (issu du SIRET) correspond √† cette valeur.",
            "required": false,
            "schema": { "type": "string" }
          }
        ], 
        "responses": { 
          "200": { 
            "description": "Complete searches data with leads", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "description": "Workflow success status" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workflow": { "type": "string", "description": "Workflow name" },
                        "timestamp": { "type": "string", "format": "date-time", "description": "Execution timestamp" },
                        "searches": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "format": "uuid" },
                              "name": { "type": "string" },
                              "leads_count": { "type": "integer" },
                              "created_at": { "type": "string", "format": "date-time" },
                              "details": { "$ref": "#/components/schemas/ProntoSearch" },
                              "leads": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ProntoContact"
                                }
                              },
                              "leads_pagination": {
                                "type": "object",
                                "properties": {
                                  "page": { "type": "integer" },
                                  "limit": { "type": "integer" },
                                  "total": { "type": "integer" },
                                  "pages": { "type": "integer" }
                                }
                              },
                              "processed": { "type": "boolean" },
                              "error": { "type": "string" }
                            }
                          }
                        },
                        "total_searches": { "type": "integer", "description": "Total number of searches found" },
                        "total_leads": { "type": "integer", "description": "Total number of leads extracted" },
                        "processing_time": { "type": "integer", "description": "Processing time in milliseconds" },
                        "stats": {
                          "type": "object",
                          "properties": {
                            "searches_processed": { "type": "integer" },
                            "searches_with_leads": { "type": "integer" },
                            "leads_enriched": { "type": "integer" },
                            "errors": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "total_searches_found": { "type": "integer", "description": "Total searches found" },
                        "searches_processed": { "type": "integer", "description": "Number of searches processed" },
                        "searches_with_leads": { "type": "integer", "description": "Number of searches with leads" },
                        "total_leads_extracted": { "type": "integer", "description": "Total leads extracted" },
                        "leads_enriched": { "type": "integer", "description": "Number of leads enriched" },
                        "errors_encountered": { "type": "integer", "description": "Number of errors encountered" },
                        "processing_time_ms": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "workflow": "all-searches-complete",
                    "timestamp": "2024-01-01T10:00:00.000Z",
                    "searches": [
                      {
                        "id": "ca1e637b-332f-4df9-8ad2-2bd9bb3cacd4",
                        "name": "[Oltega] Enrichissement Kab recrutement 39 entreprise",
                        "leads_count": 60,
                        "created_at": "2025-07-06T15:07:10.787Z",
                        "details": {
                          "id": "ca1e637b-332f-4df9-8ad2-2bd9bb3cacd4",
                          "name": "[Oltega] Enrichissement Kab recrutement 39 entreprise",
                          "leads_count": 60,
                          "created_at": "2025-07-06T15:07:10.787Z"
                        },
                        "leads": [
                          {
                            "uuid": "123e4567-e89b-12d3-a456-426614174000",
                            "first_name": "John",
                            "last_name": "Doe",
                            "email": "john.doe@company.com",
                            "job_title": "CEO",
                            "company": "Tech Corp",
                            "linkedin_url": "https://linkedin.com/in/johndoe"
                          }
                        ],
                        "leads_pagination": {
                          "page": 1,
                          "limit": 50,
                          "total": 60,
                          "pages": 2
                        },
                        "processed": true,
                        "error": null
                      }
                    ],
                    "total_searches": 17,
                    "total_leads": 60,
                    "processing_time": 5000,
                    "stats": {
                      "searches_processed": 1,
                      "searches_with_leads": 1,
                      "leads_enriched": 0,
                      "errors": 0
                    }
                  },
                  "summary": {
                    "total_searches_found": 17,
                    "searches_processed": 1,
                    "searches_with_leads": 1,
                    "total_leads_extracted": 60,
                    "leads_enriched": 0,
                    "errors_encountered": 0,
                    "processing_time_ms": 5000
                  }
                }
              } 
            } 
          }, 
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto-workflows/search-leads/{searchId}": {
      "get": { 
        "summary": "Get leads from a specific search", 
        "description": "Workflow to retrieve all leads from a specific saved search with optional enrichment",
        "tags": ["Pronto Workflows"], 
        "parameters": [ 
          { 
            "name": "searchId", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID of the search to retrieve leads from"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "minimum": 1 },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "minimum": 1, "maximum": 1000 },
            "description": "Number of leads per page"
          },
          {
            "name": "include_enrichment",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": false },
            "description": "Whether to enrich lead data with additional information"
          }
        ], 
        "responses": { 
          "200": { 
            "description": "Leads from the search", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "description": "Workflow success status" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workflow": { "type": "string", "description": "Workflow name" },
                        "timestamp": { "type": "string", "format": "date-time", "description": "Execution timestamp" },
                        "search_id": { "type": "string", "format": "uuid", "description": "Search ID" },
                        "search_details": { "$ref": "#/components/schemas/ProntoSearch" },
                        "leads": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProntoContact"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": { "type": "integer", "description": "Current page number" },
                            "limit": { "type": "integer", "description": "Number of items per page" },
                            "total": { "type": "integer", "description": "Total number of leads" },
                            "pages": { "type": "integer", "description": "Total number of pages" }
                          }
                        },
                        "processing_time": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "search_name": { "type": "string", "description": "Name of the search" },
                        "leads_found": { "type": "integer", "description": "Number of leads found" },
                        "leads_enriched": { "type": "integer", "description": "Number of leads enriched" },
                        "total_pages": { "type": "integer", "description": "Total number of pages" },
                        "processing_time_ms": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "workflow": "search-leads",
                    "timestamp": "2024-01-01T10:00:00.000Z",
                    "search_id": "ca1e637b-332f-4df9-8ad2-2bd9bb3cacd4",
                    "search_details": {
                      "id": "ca1e637b-332f-4df9-8ad2-2bd9bb3cacd4",
                      "name": "[Oltega] Enrichissement Kab recrutement 39 entreprise",
                      "leads_count": 60,
                      "created_at": "2025-07-06T15:07:10.787Z"
                    },
                    "leads": [
                      {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "first_name": "John",
                        "last_name": "Doe",
                        "email": "john.doe@company.com",
                        "job_title": "CEO",
                        "company": "Tech Corp",
                        "linkedin_url": "https://linkedin.com/in/johndoe",
                        "phone": "+33123456789",
                        "enriched": true
                      }
                    ],
                    "pagination": {
                      "page": 1,
                      "limit": 100,
                      "total": 60,
                      "pages": 1
                    },
                    "processing_time": 2500
                  },
                  "summary": {
                    "search_name": "[Oltega] Enrichissement Kab recrutement 39 entreprise",
                    "leads_found": 60,
                    "leads_enriched": 60,
                    "total_pages": 1,
                    "processing_time_ms": 2500
                  }
                }
              } 
            } 
          }, 
          "400": { "description": "Bad Request - Invalid search ID" },
          "404": { "description": "Search not found" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto-workflows/search-leads-enhanced/{searchId}": {
      "get": { 
        "summary": "Get enhanced leads from a specific search", 
        "description": "Advanced workflow to retrieve leads with comprehensive enrichment including personal, professional, company and financial data",
        "tags": ["Pronto Workflows"], 
        "parameters": [ 
          { 
            "name": "searchId", 
            "in": "path", 
            "required": true, 
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID of the search to retrieve leads from"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "minimum": 1 },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 50, "minimum": 1, "maximum": 100 },
            "description": "Number of leads per page (limited due to enrichment complexity)"
          },
          {
            "name": "include_company_data",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": true },
            "description": "Whether to include detailed company information"
          },
          {
            "name": "include_financial",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean", "default": true },
            "description": "Whether to include financial data (revenue, funding, etc.)"
          }
        ], 
        "responses": { 
          "200": { 
            "description": "Enhanced leads from the search", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "description": "Workflow success status" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workflow": { "type": "string", "description": "Workflow name" },
                        "timestamp": { "type": "string", "format": "date-time", "description": "Execution timestamp" },
                        "search_id": { "type": "string", "format": "uuid", "description": "Search ID" },
                        "search_details": { "$ref": "#/components/schemas/ProntoSearch" },
                        "leads": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": { "type": "string", "format": "uuid" },
                              "first_name": { "type": "string" },
                              "last_name": { "type": "string" },
                              "email": { "type": "string" },
                              "job_title": { "type": "string" },
                              "company": { "type": "string" },
                              "linkedin_url": { "type": "string" },
                              "enriched": { "type": "boolean" },
                              "personal_data": {
                                "type": "object",
                                "properties": {
                                  "full_name": { "type": "string" },
                                  "email": { "type": "string" },
                                  "phone": { "type": "string" },
                                  "location": { "type": "string" },
                                  "social_profiles": {
                                    "type": "object",
                                    "properties": {
                                      "linkedin": { "type": "string" },
                                      "twitter": { "type": "string" },
                                      "facebook": { "type": "string" }
                                    }
                                  },
                                  "bio": { "type": "string" },
                                  "skills": { "type": "array", "items": { "type": "string" } }
                                }
                              },
                              "professional_data": {
                                "type": "object",
                                "properties": {
                                  "current_position": { "type": "string" },
                                  "company": { "type": "string" },
                                  "industry": { "type": "string" },
                                  "experience_years": { "type": "integer" },
                                  "education": { "type": "array", "items": { "type": "object" } },
                                  "certifications": { "type": "array", "items": { "type": "string" } },
                                  "career_history": { "type": "array", "items": { "type": "object" } }
                                }
                              },
                              "company_data": {
                                "type": "object",
                                "properties": {
                                  "headcount": { "type": "integer" },
                                  "industry": { "type": "string" },
                                  "location": { "type": "string" },
                                  "founded_year": { "type": "integer" },
                                  "company_type": { "type": "string" },
                                  "website": { "type": "string" },
                                  "linkedin_url": { "type": "string" }
                                }
                              },
                              "financial_data": {
                                "type": "object",
                                "properties": {
                                  "company_revenue": { "type": "integer" },
                                  "revenue_currency": { "type": "string" },
                                  "revenue_year": { "type": "integer" },
                                  "funding_status": { "type": "string" },
                                  "funding_rounds": { "type": "array", "items": { "type": "object" } },
                                  "valuation": { "type": "integer" },
                                  "financial_health_score": { "type": "integer" }
                                }
                              },
                              "contact_details": {
                                "type": "object",
                                "properties": {
                                  "email_verified": { "type": "boolean" },
                                  "phone_verified": { "type": "boolean" },
                                  "preferred_contact_method": { "type": "string" },
                                  "contact_score": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": { "type": "integer", "description": "Current page number" },
                            "limit": { "type": "integer", "description": "Number of items per page" },
                            "total": { "type": "integer", "description": "Total number of leads" },
                            "pages": { "type": "integer", "description": "Total number of pages" }
                          }
                        },
                        "processing_time": { "type": "integer", "description": "Processing time in milliseconds" },
                        "enrichment_stats": {
                          "type": "object",
                          "properties": {
                            "leads_enriched": { "type": "integer" },
                            "leads_with_company_data": { "type": "integer" },
                            "leads_with_financial_data": { "type": "integer" },
                            "leads_with_contact_details": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "search_name": { "type": "string", "description": "Name of the search" },
                        "leads_found": { "type": "integer", "description": "Number of leads found" },
                        "leads_enriched": { "type": "integer", "description": "Number of leads enriched" },
                        "leads_with_company_data": { "type": "integer", "description": "Number of leads with company data" },
                        "leads_with_financial_data": { "type": "integer", "description": "Number of leads with financial data" },
                        "leads_with_contact_details": { "type": "integer", "description": "Number of leads with contact details" },
                        "total_pages": { "type": "integer", "description": "Total number of pages" },
                        "processing_time_ms": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "workflow": "enhanced-search-leads",
                    "timestamp": "2024-01-01T10:00:00.000Z",
                    "search_id": "ca1e637b-332f-4df9-8ad2-2bd9bb3cacd4",
                    "search_details": {
                      "id": "ca1e637b-332f-4df9-8ad2-2bd9bb3cacd4",
                      "name": "[Oltega] Enrichissement Kab recrutement 39 entreprise",
                      "leads_count": 60,
                      "created_at": "2025-07-06T15:07:10.787Z"
                    },
                    "leads": [
                      {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "first_name": "John",
                        "last_name": "Doe",
                        "email": "john.doe@company.com",
                        "job_title": "CEO",
                        "company": "Tech Corp",
                        "linkedin_url": "https://linkedin.com/in/johndoe",
                        "enriched": true,
                        "personal_data": {
                          "full_name": "John Doe",
                          "email": "john.doe@company.com",
                          "phone": "+33123456789",
                          "location": "Paris, France",
                          "social_profiles": {
                            "linkedin": "https://linkedin.com/in/johndoe",
                            "twitter": null,
                            "facebook": null
                          },
                          "bio": "Experienced CEO with 15+ years in tech",
                          "skills": ["Leadership", "Strategy", "Technology"]
                        },
                        "professional_data": {
                          "current_position": "CEO",
                          "company": "Tech Corp",
                          "industry": "Technology",
                          "experience_years": 15,
                          "education": [
                            { "degree": "MBA", "school": "HEC Paris", "year": 2010 }
                          ],
                          "certifications": ["PMP", "Scrum Master"],
                          "career_history": [
                            { "position": "CTO", "company": "Previous Corp", "duration": "2015-2020" }
                          ]
                        },
                        "company_data": {
                          "headcount": 150,
                          "industry": "Technology",
                          "location": "Paris, France",
                          "founded_year": 2015,
                          "company_type": "Private",
                          "website": "techcorp.com",
                          "linkedin_url": "linkedin.com/company/techcorp"
                        },
                        "financial_data": {
                          "company_revenue": 25000000,
                          "revenue_currency": "EUR",
                          "revenue_year": 2024,
                          "funding_status": "funded",
                          "funding_rounds": [
                            { "round": "Series A", "amount": 5000000, "date": "2023-01-01" }
                          ],
                          "valuation": 100000000,
                          "financial_health_score": 85
                        },
                        "contact_details": {
                          "email_verified": true,
                          "phone_verified": true,
                          "preferred_contact_method": "email",
                          "contact_score": 95
                        }
                      }
                    ],
                    "pagination": {
                      "page": 1,
                      "limit": 50,
                      "total": 60,
                      "pages": 2
                    },
                    "processing_time": 5000,
                    "enrichment_stats": {
                      "leads_enriched": 1,
                      "leads_with_company_data": 1,
                      "leads_with_financial_data": 1,
                      "leads_with_contact_details": 1
                    }
                  },
                  "summary": {
                    "search_name": "[Oltega] Enrichissement Kab recrutement 39 entreprise",
                    "leads_found": 1,
                    "leads_enriched": 1,
                    "leads_with_company_data": 1,
                    "leads_with_financial_data": 1,
                    "leads_with_contact_details": 1,
                    "total_pages": 2,
                    "processing_time_ms": 5000
                  }
                }
              } 
            } 
          }, 
          "400": { "description": "Bad Request - Invalid search ID" },
          "404": { "description": "Search not found" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto-workflows/company-search-automatic": {
      "post": { 
        "summary": "Automatic company search with complete enrichment", 
        "description": "Automated workflow that combines company search, enrichment, headcount, contacts, and growth analysis in one operation. Just provide a query and get everything automatically!",
        "tags": ["Pronto Workflows"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "query": { "type": "string", "description": "Search query for companies (required)" },
                  "filters": { 
                    "type": "object", 
                    "description": "Additional filters for the search",
                    "properties": {
                      "industry": { "type": "string", "description": "Industry filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "size": { "type": "string", "description": "Company size filter" }
                    }
                  },
                  "limit": { "type": "integer", "default": 10, "description": "Maximum number of companies to return" },
                  "auto_enrich": { "type": "boolean", "default": true, "description": "Whether to automatically enrich all companies" },
                  "include_contacts": { "type": "boolean", "default": true, "description": "Whether to include key contacts" },
                  "include_headcount": { "type": "boolean", "default": true, "description": "Whether to include headcount data" },
                  "include_financial": { "type": "boolean", "default": true, "description": "Whether to include financial data" },
                  "include_growth_analysis": { "type": "boolean", "default": true, "description": "Whether to include growth analysis" }
                },
                "required": ["query"]
              },
              "example": {
                "query": "Technology companies in Paris",
                "filters": {
                  "industry": "Technology",
                  "location": "Paris, France",
                  "size": "10-50"
                },
                "limit": 5,
                "auto_enrich": true,
                "include_contacts": true,
                "include_headcount": true,
                "include_financial": true,
                "include_growth_analysis": true
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Automatically enriched company search results", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "description": "Workflow success status" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workflow": { "type": "string", "description": "Workflow name" },
                        "timestamp": { "type": "string", "format": "date-time", "description": "Execution timestamp" },
                        "query": { "type": "string", "description": "Original search query" },
                        "filters": { "type": "object", "description": "Applied filters" },
                        "companies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string", "description": "Company name" },
                              "website": { "type": "string", "description": "Company website" },
                              "linkedin_url": { "type": "string", "description": "LinkedIn URL" },
                              "enriched": { "type": "boolean", "description": "Whether company was enriched" },
                              "financial_data": { "type": "object", "description": "Financial information" },
                              "headcount_data": { "type": "object", "description": "Headcount information" },
                              "key_contacts": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ProntoContact"
                                }
                              },
                              "contacts_count": { "type": "integer", "description": "Number of contacts found" },
                              "growth_analysis": { "type": "object", "description": "Growth analysis data" },
                              "enrichment_errors": { "type": "array", "items": { "type": "string" }, "description": "List of enrichment errors" }
                            }
                          }
                        },
                        "total_found": { "type": "integer", "description": "Total companies found" },
                        "processing_time": { "type": "integer", "description": "Processing time in milliseconds" },
                        "enrichment_stats": {
                          "type": "object",
                          "properties": {
                            "companies_enriched": { "type": "integer" },
                            "companies_with_financial": { "type": "integer" },
                            "companies_with_headcount": { "type": "integer" },
                            "companies_with_contacts": { "type": "integer" },
                            "companies_with_growth_data": { "type": "integer" },
                            "errors": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "companies_found": { "type": "integer", "description": "Number of companies found" },
                        "companies_enriched": { "type": "integer", "description": "Number of companies enriched" },
                        "companies_with_financial": { "type": "integer", "description": "Number of companies with financial data" },
                        "companies_with_headcount": { "type": "integer", "description": "Number of companies with headcount data" },
                        "companies_with_contacts": { "type": "integer", "description": "Number of companies with contacts" },
                        "companies_with_growth_data": { "type": "integer", "description": "Number of companies with growth data" },
                        "errors_encountered": { "type": "integer", "description": "Number of errors encountered" },
                        "processing_time_ms": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "workflow": "company-search-automatic",
                    "timestamp": "2024-01-01T10:00:00.000Z",
                    "query": "Technology companies in Paris",
                    "filters": {
                      "industry": "Technology",
                      "location": "Paris, France"
                    },
                    "companies": [
                      {
                        "name": "Tech Corp",
                        "website": "techcorp.com",
                        "linkedin_url": "https://linkedin.com/company/techcorp",
                        "enriched": true,
                        "financial_data": {
                          "revenue": 2500000,
                          "revenue_currency": "EUR",
                          "revenue_year": 2024
                        },
                        "headcount_data": {
                          "current_headcount": 45
                        },
                        "key_contacts": [
                          {
                            "first_name": "John",
                            "last_name": "Doe",
                            "email": "john.doe@techcorp.com",
                            "job_title": "CEO"
                          }
                        ],
                        "contacts_count": 1,
                        "growth_analysis": {
                          "growth_score": 85,
                          "hiring_trend": "increasing"
                        },
                        "enrichment_errors": []
                      }
                    ],
                    "total_found": 1,
                    "processing_time": 3500,
                    "enrichment_stats": {
                      "companies_enriched": 1,
                      "companies_with_financial": 1,
                      "companies_with_headcount": 1,
                      "companies_with_contacts": 1,
                      "companies_with_growth_data": 1,
                      "errors": 0
                    }
                  },
                  "summary": {
                    "companies_found": 1,
                    "companies_enriched": 1,
                    "companies_with_financial": 1,
                    "companies_with_headcount": 1,
                    "companies_with_contacts": 1,
                    "companies_with_growth_data": 1,
                    "errors_encountered": 0,
                    "processing_time_ms": 3500
                  }
                }
              } 
            } 
          }, 
          "400": { "description": "Bad Request - Invalid input parameters" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/workflows/company-search": {
      "post": { 
        "summary": "Company Search Workflow", 
        "description": "Complete workflow for enriched company search - reproduces SocieteInfo.com functionality. Combines company search, headcount analysis, and contact enrichment in one operation.",
        "tags": ["Pronto Workflows"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "query": { "type": "string", "description": "Search query for companies (required)" },
                  "filters": {
                    "type": "object",
                    "properties": {
                      "industry": { "type": "string", "description": "Industry filter" },
                      "location": { "type": "string", "description": "Location filter" },
                      "size": { "type": "string", "description": "Company size filter" },
                      "funding": { "type": "string", "description": "Funding status filter" }
                    }
                  },
                  "limit": { "type": "integer", "description": "Maximum number of companies to return", "default": 10 },
                  "include_contacts": { "type": "boolean", "description": "Include key contacts for each company", "default": true },
                  "include_headcount": { "type": "boolean", "description": "Include headcount data for each company", "default": true }
                },
                "required": ["query"]
              },
              "example": {
                "query": "Technology companies in Paris",
                "filters": {
                  "industry": "Technology",
                  "location": "Paris, France",
                  "size": "10-50"
                },
                "limit": 5,
                "auto_enrich": true,
                "include_contacts": true,
                "include_headcount": true,
                "include_financial": true,
                "include_growth_analysis": true
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Automatically enriched company search results", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "description": "Workflow success status" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workflow": { "type": "string", "description": "Workflow name" },
                        "timestamp": { "type": "string", "format": "date-time", "description": "Execution timestamp" },
                        "query": { "type": "string", "description": "Original search query" },
                        "filters": { "type": "object", "description": "Applied filters" },
                        "companies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string", "description": "Company name" },
                              "website": { "type": "string", "description": "Company website" },
                              "linkedin_url": { "type": "string", "description": "LinkedIn URL" },
                              "enriched": { "type": "boolean", "description": "Whether company was enriched" },
                              "financial_data": { "type": "object", "description": "Financial information" },
                              "headcount_data": { "type": "object", "description": "Headcount information" },
                              "key_contacts": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ProntoContact"
                                }
                              },
                              "contacts_count": { "type": "integer", "description": "Number of contacts found" },
                              "growth_analysis": { "type": "object", "description": "Growth analysis data" },
                              "enrichment_errors": { "type": "array", "items": { "type": "string" }, "description": "List of enrichment errors" }
                            }
                          }
                        },
                        "total_found": { "type": "integer", "description": "Total companies found" },
                        "processing_time": { "type": "integer", "description": "Processing time in milliseconds" },
                        "enrichment_stats": {
                          "type": "object",
                          "properties": {
                            "companies_enriched": { "type": "integer" },
                            "companies_with_financial": { "type": "integer" },
                            "companies_with_headcount": { "type": "integer" },
                            "companies_with_contacts": { "type": "integer" },
                            "companies_with_growth_data": { "type": "integer" },
                            "errors": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "companies_found": { "type": "integer", "description": "Number of companies found" },
                        "companies_enriched": { "type": "integer", "description": "Number of companies enriched" },
                        "companies_with_financial": { "type": "integer", "description": "Number of companies with financial data" },
                        "companies_with_headcount": { "type": "integer", "description": "Number of companies with headcount data" },
                        "companies_with_contacts": { "type": "integer", "description": "Number of companies with contacts" },
                        "companies_with_growth_data": { "type": "integer", "description": "Number of companies with growth data" },
                        "errors_encountered": { "type": "integer", "description": "Number of errors encountered" },
                        "processing_time_ms": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "workflow": "company-search-automatic",
                    "timestamp": "2024-01-01T10:00:00.000Z",
                    "query": "Technology companies in Paris",
                    "filters": {
                      "industry": "Technology",
                      "location": "Paris, France"
                    },
                    "companies": [
                      {
                        "name": "Tech Corp",
                        "website": "techcorp.com",
                        "linkedin_url": "https://linkedin.com/company/techcorp",
                        "enriched": true,
                        "financial_data": {
                          "revenue": 2500000,
                          "revenue_currency": "EUR",
                          "revenue_year": 2024
                        },
                        "headcount_data": {
                          "current_headcount": 45
                        },
                        "key_contacts": [
                          {
                            "first_name": "John",
                            "last_name": "Doe",
                            "email": "john.doe@techcorp.com",
                            "job_title": "CEO"
                          }
                        ],
                        "contacts_count": 1,
                        "growth_analysis": {
                          "growth_score": 85,
                          "hiring_trend": "increasing"
                        },
                        "enrichment_errors": []
                      }
                    ],
                    "total_found": 1,
                    "processing_time": 3500,
                    "enrichment_stats": {
                      "companies_enriched": 1,
                      "companies_with_financial": 1,
                      "companies_with_headcount": 1,
                      "companies_with_contacts": 1,
                      "companies_with_growth_data": 1,
                      "errors": 0
                    }
                  },
                  "summary": {
                    "companies_found": 1,
                    "companies_enriched": 1,
                    "companies_with_financial": 1,
                    "companies_with_headcount": 1,
                    "companies_with_contacts": 1,
                    "companies_with_growth_data": 1,
                    "errors_encountered": 0,
                    "processing_time_ms": 3500
                  }
                }
              } 
            } 
          }, 
          "400": { "description": "Bad Request - Invalid input parameters" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/pronto/workflows/market-analysis": {
      "post": { 
        "summary": "Market Analysis Workflow", 
        "description": "Complete market analysis workflow that identifies growing companies, hiring companies, and provides market insights for a specific industry and location.",
        "tags": ["Pronto Workflows"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "industry": { "type": "string", "description": "Industry to analyze (required)" },
                  "location": { "type": "string", "description": "Geographic location for analysis" },
                  "limit": { "type": "integer", "description": "Maximum number of companies to analyze", "default": 10 }
                },
                "required": ["industry"]
              },
              "example": {
                "industry": "Technology",
                "location": "Paris, France",
                "limit": 10
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Market analysis results", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "description": "Workflow success status" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workflow": { "type": "string", "description": "Workflow name" },
                        "timestamp": { "type": "string", "format": "date-time", "description": "Execution timestamp" },
                        "industry": { "type": "string", "description": "Analyzed industry" },
                        "location": { "type": "string", "description": "Analyzed location" },
                        "growing_companies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "company": { "$ref": "#/components/schemas/ProntoAccount" },
                              "growth_indicators": { "type": "array", "items": { "type": "string" } },
                              "growth_score": { "type": "number" }
                            }
                          }
                        },
                        "hiring_companies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "company": { "$ref": "#/components/schemas/ProntoAccount" },
                              "job_count": { "type": "integer" },
                              "recent_postings": { "type": "array", "items": { "type": "string" } }
                            }
                          }
                        },
                        "market_insights": {
                          "type": "object",
                          "properties": {
                            "total_growing_companies": { "type": "integer" },
                            "total_hiring_companies": { "type": "integer" },
                            "headcount_analysis": { "type": "array" },
                            "market_activity_score": { "type": "number" }
                          }
                        },
                        "processing_time": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "growing_companies": { "type": "integer" },
                        "hiring_companies": { "type": "integer" },
                        "market_activity_score": { "type": "number" },
                        "processing_time_ms": { "type": "integer" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "workflow": "market-analysis",
                    "timestamp": "2024-01-01T10:00:00.000Z",
                    "industry": "Technology",
                    "location": "Paris, France",
                    "growing_companies": [
                      {
                        "company": {
                          "uuid": "123e4567-e89b-12d3-a456-426614174000",
                          "name": "TechCorp",
                          "industry": "Technology",
                          "size": "10-50",
                          "location": "Paris, France"
                        },
                        "growth_indicators": ["Recent hiring", "New office opening"],
                        "growth_score": 85
                      }
                    ],
                    "hiring_companies": [
                      {
                        "company": {
                          "uuid": "123e4567-e89b-12d3-a456-426614174001",
                          "name": "StartupXYZ",
                          "industry": "Technology",
                          "size": "1-10",
                          "location": "Paris, France"
                        },
                        "job_count": 5,
                        "recent_postings": ["Software Engineer", "Product Manager"]
                      }
                    ],
                    "market_insights": {
                      "total_growing_companies": 1,
                      "total_hiring_companies": 1,
                      "headcount_analysis": [
                        {
                          "company": "TechCorp",
                          "headcount_data": {
                            "current_headcount": 25,
                            "headcount_history": [
                              { "date": "2023-01-01", "count": 20 },
                              { "date": "2024-01-01", "count": 25 }
                            ]
                          }
                        }
                      ],
                      "market_activity_score": 85
                    },
                    "processing_time": 3000
                  },
                  "summary": {
                    "growing_companies": 1,
                    "hiring_companies": 1,
                    "market_activity_score": 85,
                    "processing_time_ms": 3000
                  }
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input parameters" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Workflow execution failed" }
        } 
      }
    },
    "/api/pronto/workflows/targeted-prospecting": {
      "post": { 
        "summary": "Targeted Prospecting Workflow", 
        "description": "Complete prospecting workflow that finds and enriches contacts based on specific job titles, companies, and locations. Includes new hires detection.",
        "tags": ["Pronto Workflows"], 
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { 
                "type": "object",
                "properties": {
                  "job_titles": { 
                    "type": "array", 
                    "items": { "type": "string" }, 
                    "description": "Array of job titles to search for (required)" 
                  },
                  "companies": { 
                    "type": "array", 
                    "items": { "type": "string" }, 
                    "description": "Array of target companies" 
                  },
                  "location": { "type": "string", "description": "Geographic location filter" },
                  "limit": { "type": "integer", "description": "Maximum number of prospects to return", "default": 20 },
                  "include_new_hires": { "type": "boolean", "description": "Include recent new hires", "default": true }
                },
                "required": ["job_titles"]
              },
              "example": {
                "job_titles": ["Software Engineer", "Product Manager"],
                "companies": ["Google", "Microsoft"],
                "location": "Paris, France",
                "limit": 20,
                "include_new_hires": true
              }
            } 
          } 
        }, 
        "responses": { 
          "200": { 
            "description": "Targeted prospecting results", 
            "content": { 
              "application/json": { 
                "schema": { 
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "description": "Workflow success status" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workflow": { "type": "string", "description": "Workflow name" },
                        "timestamp": { "type": "string", "format": "date-time", "description": "Execution timestamp" },
                        "job_titles": { "type": "array", "items": { "type": "string" }, "description": "Searched job titles" },
                        "companies": { "type": "array", "items": { "type": "string" }, "description": "Target companies" },
                        "location": { "type": "string", "description": "Location filter" },
                        "prospects": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": { "type": "string", "format": "uuid" },
                              "first_name": { "type": "string" },
                              "last_name": { "type": "string" },
                              "email": { "type": "string" },
                              "phone": { "type": "string" },
                              "job_title": { "type": "string" },
                              "company": { "type": "string" },
                              "linkedin_url": { "type": "string" },
                              "enriched": { "type": "boolean" }
                            }
                          }
                        },
                        "new_hires": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "contact": { "$ref": "#/components/schemas/ProntoContact" },
                              "start_date": { "type": "string", "format": "date" },
                              "previous_company": { "type": "string" }
                            }
                          }
                        },
                        "processing_time": { "type": "integer", "description": "Processing time in milliseconds" }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "total_prospects": { "type": "integer" },
                        "enriched_prospects": { "type": "integer" },
                        "new_hires": { "type": "integer" },
                        "processing_time_ms": { "type": "integer" }
                      }
                    }
                  }
                },
                "example": {
                  "success": true,
                  "data": {
                    "workflow": "targeted-prospecting",
                    "timestamp": "2024-01-01T10:00:00.000Z",
                    "job_titles": ["Software Engineer", "Product Manager"],
                    "companies": ["Google", "Microsoft"],
                    "location": "Paris, France",
                    "prospects": [
                      {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "first_name": "John",
                        "last_name": "Doe",
                        "email": "john.doe@google.com",
                        "phone": "+33123456789",
                        "job_title": "Software Engineer",
                        "company": "Google",
                        "linkedin_url": "https://linkedin.com/in/johndoe",
                        "enriched": true
                      }
                    ],
                    "new_hires": [
                      {
                        "contact": {
                          "uuid": "123e4567-e89b-12d3-a456-426614174001",
                          "first_name": "Jane",
                          "last_name": "Smith",
                          "email": "jane.smith@microsoft.com",
                          "job_title": "Product Manager",
                          "company": "Microsoft"
                        },
                        "start_date": "2024-01-01",
                        "previous_company": "Google"
                      }
                    ],
                    "processing_time": 4000
                  },
                  "summary": {
                    "total_prospects": 1,
                    "enriched_prospects": 1,
                    "new_hires": 1,
                    "processing_time_ms": 4000
                  }
                }
              } 
            } 
          }, 
          "400": { "description": "Invalid input parameters" },
          "401": { "description": "Unauthorized - Invalid API key" },
          "500": { "description": "Workflow execution failed" }
        } 
      }
    },
    "/api/pronto/accounts/single_enrich": {
      "post": {
        "summary": "Proxy to Pronto single company enrich endpoint",
        "description": "Proxies a POST request to Pronto's /accounts/single_enrich endpoint. Requires company_linkedin_url, name, domain, and country in the request body.",
        "tags": ["Pronto"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_linkedin_url": { "type": "string", "example": "https://linkedin.com/company/prontohq" },
                  "name": { "type": "string", "example": "Pronto" },
                  "domain": { "type": "string", "example": "prontohq.com" },
                  "country": { "type": "string", "example": "FR" }
                },
                "required": ["company_linkedin_url", "name", "domain", "country"]
              },
              "example": {
                "company_linkedin_url": "https://linkedin.com/company/prontohq",
                "name": "Pronto",
                "domain": "prontohq.com",
                "country": "FR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enriched company data from Pronto",
            "content": {
              "application/json": {
                "example": {
                  "name": "Pronto",
                  "description": "Ready to hunt without running ?\n\nüë®‚Äçüë©‚Äçüë¶‚Äçüë¶ Squad of 10 outbound experts +\nü¶Å One tool to automate your campaigns",
                  "industry": "Technology, Information and Internet",
                  "type": "Privately Held",
                  "employeeCount": 5,
                  "flagshipCompanyUrl": "https://www.linkedin.com/company/prontohq/",
                  "entityUrn": "urn:li:fs_salesCompany:104885158",
                  "website": "prontohq.com",
                  "employeeCountInfo": {
                    "monthlyChange": -17,
                    "employeeCount": 5,
                    "employeeDisplayCount": "5"
                  },
                  "companyPictureDisplayImage": {
                    "artifacts": [
                      {
                        "width": 200,
                        "fileIdentifyingUrlPathSegment": "200_200/company-logo_200_200/0/1724258638180/prontohq_logo?e=1753920000&v=beta&t=lkLO8u_KIjlFSsPuh_jbf47z0zPzEumAzAtxYGDsZlA",
                        "height": 200
                      }
                    ],
                    "rootUrl": "https://media.licdn.com/dms/image/v2/D4D0BAQFbBl6GwyL9IA/company-logo_"
                  },
                  "employeeCountRange": "2-10",
                  "headquarters": {
                    "country": "France",
                    "city": "Paris"
                  },
                  "revenueRange": {
                    "estimatedMinRevenue": {
                      "currencyCode": "USD",
                      "amount": 500,
                      "unit": "THOUSAND"
                    },
                    "estimatedMaxRevenue": {
                      "currencyCode": "USD",
                      "amount": 1,
                      "unit": "MILLION"
                    }
                  },
                  "employeeDisplayCount": "5",
                  "location": "Paris, √éle-de-France, France"
                }
              }
            }
          },
          "400": { "description": "Invalid input or error from Pronto API" },
          "500": { "description": "Internal server error" }
        } 
      }
    },
    "/api/file/export": {
      "get": {
        "summary": "Lister les exports de fichiers",
        "description": "Retourne la liste de tous les exports (table export)",
        "tags": ["Export"],
        "responses": {
          "200": {
            "description": "Liste des exports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer" },
                      "file": { "type": "string" },
                      "path": { "type": "array", "items": { "type": "string" } },
                      "type": { "type": "string" },
                      "ligne": { "type": "integer" },
                      "created_at": { "type": "string", "format": "date-time" }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "file": "export",
                    "path": ["/public/file/export.csv", "/public/file/export.xlsx"],
                    "type": "entreprise",
                    "ligne": 42,
                    "created_at": "2024-07-15T10:00:00.000Z"
                  }
                ]
              }
            }
          },
          "500": { "description": "Erreur serveur" }
        }
      },
      "post": {
        "summary": "Ajouter un ou plusieurs exports de fichiers",
        "description": "Ajoute un ou plusieurs enregistrements dans la table 'export'. Le corps doit contenir la cl√© 'exports' (tableau d'objets √† ins√©rer). Pour compatibilit√©, un seul objet est aussi accept√©.",
        "tags": ["Export"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exports": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "file": { "type": "string", "description": "Nom du fichier export√© (avec extension)" },
                        "path": { "type": "string", "description": "Chemin du fichier export√©" },
                        "type": { "type": "string", "description": "Type d'export (ex: entreprise, contact)" },
                        "ligne": { "type": "integer", "description": "Nombre de lignes export√©es" }
                      },
                      "required": ["file", "path"]
                    },
                    "description": "Tableau d'exports √† ins√©rer"
                  }
                },
                "example": {
                  "exports": [
                    { "type": "entreprise", "file": "rapport.csv", "path": "/public/file/rapport.csv", "ligne": 150 },
                    { "type": "entreprise", "file": "rapport.xlsx", "path": "/public/file/rapport.xlsx", "ligne": 150 }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exports enregistr√©s avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "uuid" },
                      "file": { "type": "string" },
                      "path": { "type": "string" },
                      "type": { "type": "string" },
                      "ligne": { "type": "integer" },
                      "created_at": { "type": "string", "format": "date-time" }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Requ√™te invalide (file ou path manquant)" },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/api/list/import": {
      "get": {
        "summary": "R√©cup√©rer toutes les listes (import)",
        "description": "Retourne toutes les lignes de la table 'liste'. Equivalent √† GET /api/list mais sur /import.",
        "tags": ["Liste"],
        "responses": {
          "200": {
            "description": "Liste des listes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "uuid" },
                      "type": { "type": "string" },
                      "nom": { "type": "string" },
                      "elements": { "type": "integer" },
                      "path": { "type": "string" },
                      "created_at": { "type": "string", "format": "date-time" },
                      "updated_at": { "type": "string", "format": "date-time" }
                    }
                  }
                },
                "example": [
                  { "id": "123e4567-e89b-12d3-a456-426614174000", "type": "entreprise", "nom": "ma liste", "elements": 1250, "path": "/public/list/entreprises_madagascar.csv", "created_at": "2024-01-01T10:00:00.000Z", "updated_at": "2024-01-01T10:00:00.000Z" }
                ]
              }
            }
          },
          "500": { "description": "Erreur serveur" }
        }
      },
      "post": {
        "summary": "Importer une ou plusieurs listes (cr√©ation directe)",
        "description": "Ajoute une ou plusieurs listes dans la table 'liste'. Le corps doit contenir la cl√© 'lists' (tableau d'objets √† ins√©rer). Pour compatibilit√©, un seul objet est aussi accept√©.",
        "tags": ["Liste"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lists": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": { "type": "string", "description": "Type de la liste (ex: entreprise, contact)" },
                        "nom": { "type": "string", "description": "Nom de la liste" },
                        "elements": { "type": "integer", "description": "Nombre d'√©l√©ments dans la liste" },
                        "path": { "type": "string", "description": "Chemin du fichier de la liste" }
                      },
                      "required": ["type", "nom", "elements", "path"]
                    },
                    "description": "Tableau de listes √† ins√©rer"
                  }
                },
                "example": {
                  "lists": [
                    { "type": "entreprise", "nom": "ma liste", "elements": 1250, "path": "/public/list/entreprises_madagascar.csv" }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Listes import√©es avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "format": "uuid" },
                      "type": { "type": "string" },
                      "nom": { "type": "string" },
                      "elements": { "type": "integer" },
                      "path": { "type": "string" },
                      "created_at": { "type": "string", "format": "date-time" },
                      "updated_at": { "type": "string", "format": "date-time" }
                    }
                  }
                }
              }
            }
          },
          "400": { "description": "Requ√™te invalide (champ manquant)" },
          "500": { "description": "Erreur serveur" }
        }
      }
    },
    "/api/list/{id}/content": {
      "get": {
        "summary": "R√©cup√©rer le contenu CSV d'une liste",
        "description": "Retourne le contenu du fichier CSV associ√© √† la liste identifi√©e par l'id (chaque ligne du CSV devient un objet).",
        "tags": ["Liste"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID de la liste dont on veut le contenu CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Contenu du CSV sous forme de tableau d'objets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "object" }
                },
                "example": [
                  { "col1": "valeur1", "col2": "valeur2" },
                  { "col1": "valeur3", "col2": "valeur4" }
                ]
              }
            }
          },
          "404": { "description": "Liste ou fichier CSV non trouv√©" },
          "500": { "description": "Erreur serveur ou parsing CSV" }
        }
      }
    },
    "/api/list/{id}/first-column": {
      "get": {
        "summary": "R√©cup√©rer la premi√®re colonne du CSV d'une liste",
        "description": "Retourne uniquement la premi√®re colonne du fichier CSV associ√© √† la liste identifi√©e par l'id (tableau de valeurs).",
        "tags": ["Liste"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" },
            "description": "UUID de la liste dont on veut la premi√®re colonne du CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Tableau des valeurs de la premi√®re colonne du CSV",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "example": ["Urban Practices", "SOFTAIR", "Ferest Energies BET"]
              }
            }
          },
          "404": { "description": "Liste ou fichier CSV non trouv√©" },
          "500": { "description": "Erreur serveur ou parsing CSV" }
        }
      }
    },
    "/api/siret": {
      "get": {
        "summary": "Recherche d'√©tablissement par denominationUniteLegale (INSEE Sirene)",
        "description": "Recherche un √©tablissement via l'API INSEE Sirene en filtrant sur la d√©nomination l√©gale (denominationUniteLegale). Retourne un seul r√©sultat.",
        "tags": ["INSEE", "Sirene"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Valeur de la d√©nomination l√©gale √† rechercher (denominationUniteLegale)",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "R√©sultat de la recherche Sirene (1 √©tablissement)",
            "content": {
              "application/json": {
                "schema": { "type": "object" },
                "example": {
                  "header": { "total": 1 },
                  "etablissements": [
                    {
                      "siret": "12345678901234",
                      "uniteLegale": {
                        "denominationUniteLegale": "NOM ENTREPRISE",
                        "categorieJuridiqueUniteLegale": "5498",
                        "activitePrincipaleUniteLegale": "6201Z"
                      },
                      "adresseEtablissement": {
                        "numeroVoieEtablissement": "10",
                        "typeVoieEtablissement": "RUE",
                        "libelleVoieEtablissement": "DE LA PAIX"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "description": "Param√®tre q manquant ou invalide" },
          "500": { "description": "Erreur serveur ou INSEE" }
        }
      }
    },
    "/api/workflow/searches": {
      "get": {
        "summary": "Liste des recherches ProntoHQ (workflow)",
        "description": "R√©cup√®re la liste des recherches depuis l'API ProntoHQ (https://app.prontohq.com/api/v2/searches) avec authentification X-API-KEY.",
        "tags": ["Workflow", "ProntoHQ"],
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Cl√© API ProntoHQ √† fournir dans le header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des recherches ProntoHQ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "searches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "name": { "type": "string" },
                          "created_at": { "type": "string", "format": "date-time" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "searches": [
                    {
                      "id": "3c90c3cc-0d44-4b50-8888-8dd25736052a",
                      "name": "<string>",
                      "created_at": "2023-11-07T05:31:56Z"
                    }
                  ]
                }
              }
            }
          },
          "401": { "description": "Cl√© API manquante ou invalide" },
          "500": { "description": "Erreur serveur ou ProntoHQ" }
        }
      }
    },
    "/api/prosperian/get/global/result": {
      "get": {
        "summary": "R√©sultats globaux des recherches ProntoHQ (workflow)",
        "description": "R√©cup√®re la liste des recherches depuis l'API ProntoHQ (https://app.prontohq.com/api/v2/searches). L'API key est g√©r√©e c√¥t√© serveur.",
        "tags": ["Workflow", "ProntoHQ"],
        "responses": {
          "200": {
            "description": "Liste des recherches ProntoHQ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "searches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "name": { "type": "string", "format": "date-time" }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "searches": [
                    {
                      "id": "3c90c3cc-0d44-4b50-8888-8dd25736052a",
                      "name": "<string>",
                      "created_at": "2023-11-07T05:31:56Z"
                    }
                  ]
                }
              }
            }
          },
          "500": { "description": "Erreur serveur ou ProntoHQ" }
        }
      }
    },
    "/api/prosperian/get/global/result": {
      "get": {
        "summary": "R√©sultats globaux d√©taill√©s des recherches ProntoHQ (workflow)",
        "description": "R√©cup√®re la liste des recherches depuis l'API ProntoHQ, puis pour chaque id, r√©cup√®re le d√©tail de la recherche. Retourne un tableau 'results' avec le d√©tail de chaque recherche (ou une erreur par id). L'API key est g√©r√©e c√¥t√© serveur.",
        "tags": ["Workflow", "ProntoHQ"],
        "responses": {
          "200": {
            "description": "D√©tails de toutes les recherches ProntoHQ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "format": "uuid" },
                          "name": { "type": "string", "format": "date-time" },
                          "other_detail": { "type": "string" },
                          "error": { "type": "string" }
                        },
                        "required": ["id"]
                      }
                    }
                  }
                },
                "example": {
                  "results": [
                    {
                      "id": "3c90c3cc-0d44-4b50-8888-8dd25736052a",
                      "name": "Recherche A",
                      "created_at": "2023-11-07T05:31:56Z",
                      "other_detail": "..."
                    },
                    {
                      "id": "b2d2c3cc-0d44-4b50-8888-8dd25736052b",
                      "error": "Not found"
                    }
                  ]
                }
              }
            }
          },
          "500": { "description": "Erreur serveur ou ProntoHQ" }
        }
      }
    },
    "/api/prosperian/get/global/result": {
      "get": {
        "summary": "R√©sultats globaux pagin√©s des entreprises ProntoHQ (workflow)",
        "description": "R√©cup√®re la liste des entreprises (leads) issues de TOUTES les recherches ProntoHQ disponibles. Source exclusive : workflow entre /api/pronto/searches et /api/pronto/searches/{id}. Processus : 1) R√©cup√®re tous les IDs depuis /api/pronto/searches, 2) Pour chaque ID, appelle /api/pronto/searches/{id}, 3) Combine tous les r√©sultats (plus de 7000 leads). Comportement : Si aucun param√®tre de pagination n'est fourni, TOUTES les entreprises sont retourn√©es. Sinon, l'utilisateur peut choisir la page via 'page' ou 'paginate' (12 entreprises par page).",
        "tags": ["Workflow", "ProntoHQ"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Num√©ro de la page √† afficher (optionnel, par d√©faut tous les r√©sultats si non fourni). Ignor√© si 'paginate' est pr√©sent.",
            "required": false,
            "schema": { "type": "integer", "minimum": 1 }
          },
          {
            "name": "paginate",
            "in": "query",
            "description": "Num√©ro de la page √† afficher (optionnel, prioritaire sur 'page' si les deux sont fournis). 12 entreprises par page.",
            "required": false,
            "schema": { "type": "integer", "minimum": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Nombre de r√©sultats √† afficher par page (optionnel, par d√©faut 12)",
            "required": false,
            "schema": { "type": "integer", "minimum": 1, "default": 12 }
          },
          {
            "name": "company_name",
            "in": "query",
            "description": "Filtre optionnel : ne retourne que les entreprises dont le nom contient cette cha√Æne. Recherche insensible √† la casse (majuscules/minuscules). Exemple : 'pruvost' trouvera 'PRUVOST LEROY', 'Pruvost Leroy', etc.",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "Filtre optionnel : ne retourne que les leads dont le pr√©nom contient cette cha√Æne (recherche insensible √† la casse)",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Filtre optionnel : ne retourne que les leads dont le nom contient cette cha√Æne (recherche insensible √† la casse)",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Page pagin√©e des entreprises (leads) fusionn√©es de toutes les recherches ProntoHQ.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": { "type": ["integer", "null"] },
                    "pageSize": { "type": "integer" },
                    "total": { "type": "integer" },
                    "totalPages": { "type": "integer" },
                    "totalCompanies": { "type": "integer" },
                    "global_results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "search_id": { "type": "string", "format": "uuid", "description": "ID de la recherche Pronto" },
                          "search_name": { "type": "string", "description": "Nom de la recherche Pronto" },
                          "leads": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "lead": { "type": "object", "description": "Donn√©es du lead" },
                                "company": { "type": "object", "description": "Donn√©es de l'entreprise" },
                                "enrich": { "type": "object", "description": "Donn√©es enrichies via Pronto (optionnel)" }
                              }
                            },
                            "description": "Tableau des leads de cette recherche"
                          }
                        }
                      },
                      "description": "Recherches regroup√©es avec leurs leads respectifs"
                    }
                  }
                },
                "examples": {
                  "exemple": {
                    "value": {
                      "page": null,
                      "pageSize": 7386,
                      "total": 7386,
                      "totalPages": 1,
                      "totalCompanies": 7386,
                      "global_results": [
                        {
                          "search_id": "2ffdf91f-ead5-45d7-9a95-1ec9743bdbb2",
                          "search_name": "[Opera Energie] Assice#3",
                          "leads": [
                            {
                              "lead": {
                                "first_name": "Tanguy",
                                "last_name": "Pruvost",
                                "title": "Responsable de production"
                              },
                              "company": {
                                "name": "PRUVOST LEROY",
                                "cleaned_name": "Pruvost Leroy"
                              },
                              "enrich": { "error": "Timeout" }
                            },
                            {
                              "lead": {
                                "first_name": "Corentin",
                                "last_name": "Garde",
                                "title": "Directeur technique"
                              },
                              "company": {
                                "name": "Ville de V√©nissieux",
                                "cleaned_name": "Ville de V√©nissieux"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/siren-data/preview": {
      "get": {
        "summary": "Aper√ßu des 12 premi√®res lignes du fichier StockUniteLegale_utf8.csv",
        "description": "Retourne les 12 premi√®res lignes du fichier CSV avec les noms de colonnes.",
        "tags": ["SirenData"],
        "responses": {
          "200": {
            "description": "Aper√ßu du CSV (12 lignes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "columns": {
                      "type": "array",
                      "items": { "type": "string" },
                      "description": "Noms des colonnes du CSV"
                    },
                    "rows": {
                      "type": "array",
                      "items": { "type": "object" },
                      "description": "Les 12 premi√®res lignes du CSV"
                    }
                  },
                  "example": {
                    "columns": ["col1", "col2", "col3"],
                    "rows": [
                      { "col1": "val1", "col2": "val2", "col3": "val3" },
                      { "col1": "val4", "col2": "val5", "col3": "val6" }
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erreur lors de la lecture du CSV"
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "summary": "Recherche d'entreprises avanc√©e (proxy API publique)",
        "description": "Proxy vers https://recherche-entreprises.api.gouv.fr/search avec tous les param√®tres support√©s par l'API publique. Retourne la r√©ponse brute de l'API publique.",
        "tags": ["Entreprise"],
        "parameters": [
          { "in": "query", "name": "q", "schema": { "type": "string" }, "required": false, "description": "Recherche plein texte (ex: q=test)" },
          { "in": "query", "name": "activite_principale", "schema": { "type": "string" }, "required": false, "description": "Le code NAF ou code APE, un code d'activit√© suivant la nomenclature de l'INSEE. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "categorie_entreprise", "schema": { "type": "string", "enum": ["PME", "ETI", "GE"] }, "required": false, "description": "Cat√©gorie d'entreprise de l'unit√© l√©gale. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "code_collectivite_territoriale", "schema": { "type": "string" }, "required": false, "description": "Code affili√© √† une collectivit√© territoriale." },
          { "in": "query", "name": "convention_collective_renseignee", "schema": { "type": "boolean" }, "required": false, "description": "Entreprises ayant au moins un √©tablissement dont la convention collective est renseign√©e." },
          { "in": "query", "name": "code_postal", "schema": { "type": "string" }, "required": false, "description": "Code postal en 5 chiffres. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "code_commune", "schema": { "type": "string" }, "required": false, "description": "Code commune (INSEE) en 5 caract√®res. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "departement", "schema": { "type": "string" }, "required": false, "description": "Code de d√©partement. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "region", "schema": { "type": "string" }, "required": false, "description": "Code de r√©gion. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "epci", "schema": { "type": "string" }, "required": false, "description": "Liste des epci valides. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "egapro_renseignee", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant un index √©gapro renseign√©" },
          { "in": "query", "name": "est_achats_responsables", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant le label RFAR." },
          { "in": "query", "name": "est_alim_confiance", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant au moins un √©tablissement avec un r√©sultat de contr√¥le sanitaire Alim'Confiance." },
          { "in": "query", "name": "est_association", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant un identifiant d'association ou une nature juridique avec mention 'association'." },
          { "in": "query", "name": "est_bio", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant un √©tablissement certifi√© par l'agence bio" },
          { "in": "query", "name": "est_collectivite_territoriale", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les collectivit√©s territoriales." },
          { "in": "query", "name": "est_entrepreneur_individuel", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises individuelles." },
          { "in": "query", "name": "est_entrepreneur_spectacle", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant une licence d'entrepreneur du spectacle." },
          { "in": "query", "name": "est_ess", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises appartenant au champ de l'√©conomie sociale et solidaire." },
          { "in": "query", "name": "est_finess", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant un √©tablissement du domaine du sanitaire et social (FINESS)" },
          { "in": "query", "name": "est_organisme_formation", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant un √©tablissement organisme de formation" },
          { "in": "query", "name": "est_patrimoine_vivant", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant le label Entreprise du Patrimoine Vivant (EPV)" },
          { "in": "query", "name": "est_qualiopi", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant une certification de la marque 'Qualiopi'" },
          { "in": "query", "name": "est_rge", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises reconnues garantes de l'Environnement (RGE)." },
          { "in": "query", "name": "est_siae", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les structures d'insertion par l'activit√© √©conomique (SIAE)." },
          { "in": "query", "name": "est_service_public", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les structures reconnues comme administration." },
          { "in": "query", "name": "est_l100_3", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les administrations au sens de l'article L. 100-3 du code des relations entre le public et l'administration (CRPA)" },
          { "in": "query", "name": "est_societe_mission", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les soci√©t√©s √† mission." },
          { "in": "query", "name": "est_uai", "schema": { "type": "boolean" }, "required": false, "description": "Uniquement les entreprises ayant un √©tablissement UAI." },
          { "in": "query", "name": "etat_administratif", "schema": { "type": "string", "enum": ["A", "C"] }, "required": false, "description": "√âtat administratif de l'unit√© l√©gale. 'A' pour Active, 'C' pour Cess√©e." },
          { "in": "query", "name": "id_convention_collective", "schema": { "type": "string" }, "required": false, "description": "Identifiant de Convention Collective d'un √©tablissement d'une entreprise." },
          { "in": "query", "name": "id_finess", "schema": { "type": "string" }, "required": false, "description": "Identifiant FINESS d'un √©tablissement d'une entreprise." },
          { "in": "query", "name": "id_rge", "schema": { "type": "string" }, "required": false, "description": "Identifiant RGE d'un √©tablissement d'une entreprise." },
          { "in": "query", "name": "id_uai", "schema": { "type": "string" }, "required": false, "description": "Identifiant UAI d'un √©tablissement d'une entreprise." },
          { "in": "query", "name": "nature_juridique", "schema": { "type": "string" }, "required": false, "description": "Cat√©gorie juridique de l'unit√© l√©gale. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "section_activite_principale", "schema": { "type": "string" }, "required": false, "description": "Section de l'activit√© principale. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "tranche_effectif_salarie", "schema": { "type": "string" }, "required": false, "description": "Tranche d'effectif salari√© de l'entreprise. Valeur unique ou liste s√©par√©e par des virgules." },
          { "in": "query", "name": "nom_personne", "schema": { "type": "string" }, "required": false, "description": "Nom d'une personne partie prenante de l'entreprise (dirigeant ou √©lu)." },
          { "in": "query", "name": "prenoms_personne", "schema": { "type": "string" }, "required": false, "description": "Pr√©nom(s) d'une personne partie prenante de l'entreprise (dirigeant ou √©lu)." },
          { "in": "query", "name": "date_naissance_personne_min", "schema": { "type": "string", "format": "date" }, "required": false, "description": "Valeur minimale de la date de naissance d'une personne partie prenante de l'entreprise." },
          { "in": "query", "name": "date_naissance_personne_max", "schema": { "type": "string", "format": "date" }, "required": false, "description": "Valeur maximale de la date de naissance d'une personne partie prenante de l'entreprise." },
          { "in": "query", "name": "type_personne", "schema": { "type": "string", "enum": ["dirigeant", "elu"] }, "required": false, "description": "Type de la partie prenante de l'entreprise, dirigeant ou √©lu." },
          { "in": "query", "name": "ca_min", "schema": { "type": "integer" }, "required": false, "description": "Valeur minimale du chiffre d'affaire de l'entreprise" },
          { "in": "query", "name": "ca_max", "schema": { "type": "integer" }, "required": false, "description": "Valeur maximale du chiffre d'affaire de l'entreprise" },
          { "in": "query", "name": "resultat_net_min", "schema": { "type": "integer" }, "required": false, "description": "Valeur minimale du r√©sultat net de l'entreprise" },
          { "in": "query", "name": "resultat_net_max", "schema": { "type": "integer" }, "required": false, "description": "Valeur maximale du r√©sultat net de l'entreprise" },
          { "in": "query", "name": "limite_matching_etablissements", "schema": { "type": "integer" }, "required": false, "default": 10, "description": "Nombre d'√©tablissements connexes inclus dans la r√©ponse (matching_etablissements). Valeur entre 1 et 100." },
          { "in": "query", "name": "minimal", "schema": { "type": "boolean" }, "required": false, "description": "Permet de retourner une r√©ponse minimale, qui exclut les champs secondaires." },
          { "in": "query", "name": "include", "schema": { "type": "string" }, "required": false, "description": "ATTENTION : Ce param√®tre ne peut √™tre appel√© qu'avec le champ 'minimal=True'. Permet de ne demander que certains des champs secondaires." },
          { "in": "query", "name": "page", "schema": { "type": "integer" }, "required": false, "default": 1, "description": "Le num√©ro de la page √† retourner." },
          { "in": "query", "name": "per_page", "schema": { "type": "integer" }, "required": false, "default": 10, "description": "Le nombre de r√©sultats par page, limit√© √† 25." }
        ],
        "responses": {
          "200": {
            "description": "R√©sultat de la recherche d'entreprises",
            "content": {
              "application/json": {
                "example": {
                  "results": [],
                  "total_results": 0,
                  "page": 0,
                  "per_page": 0,
                  "total_pages": 0
                }
              }
            }
          },
          "400": { "description": "Param√®tre manquant ou invalide" },
          "500": { "description": "Erreur serveur ou erreur de l'API publique" }
        }
      }
    },
    "/api/enrichment": {
      "post": {
        "summary": "Cr√©er un nouvel enrichment",
        "tags": ["Enrichment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "type"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nom de l'enrichment"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type d'enrichment"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description optionnelle"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enrichment cr√©√© avec succ√®s",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "enrichment": {
                      "$ref": "#/components/schemas/Enrichment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Donn√©es invalides"
          },
          "401": {
            "description": "Non authentifi√©"
          }
        }
      },
      "get": {
        "summary": "R√©cup√©rer tous les enrichments de l'utilisateur",
        "tags": ["Enrichment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Num√©ro de page"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Nombre d'√©l√©ments par page"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "Filtrer par statut"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des enrichments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "enrichments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Enrichment"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/enrichment/{id}": {
      "get": {
        "summary": "R√©cup√©rer un enrichment par ID",
        "tags": ["Enrichment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID de l'enrichment"
          }
        ],
        "responses": {
          "200": {
            "description": "Enrichment trouv√©",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "enrichment": {
                      "$ref": "#/components/schemas/Enrichment"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Enrichment non trouv√©"
          }
        }
      },
      "put": {
        "summary": "Mettre √† jour un enrichment",
        "tags": ["Enrichment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID de l'enrichment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["En cours", "Termin√©", "√âchec"]
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enrichment mis √† jour"
          },
          "404": {
            "description": "Enrichment non trouv√©"
          }
        }
      },
      "delete": {
        "summary": "Supprimer un enrichment",
        "tags": ["Enrichment"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID de l'enrichment"
          }
        ],
        "responses": {
          "200": {
            "description": "Enrichment supprim√©"
          },
          "404": {
            "description": "Enrichment non trouv√©"
          }
        }
      }
    },
    "/api/enrichment/{enrichmentId}/leads": {
      "post": {
        "summary": "Ajouter un lead enrichi √† un enrichment",
        "tags": ["LeadEnrich"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "enrichmentId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID de l'enrichment parent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["firstname", "lastname"],
                "properties": {
                  "firstname": {
                    "type": "string",
                    "description": "Pr√©nom du lead"
                  },
                  "lastname": {
                    "type": "string",
                    "description": "Nom du lead"
                  },
                  "company_name": {
                    "type": "string",
                    "description": "Nom de l'entreprise"
                  },
                  "domain": {
                    "type": "string",
                    "description": "Domaine de l'entreprise"
                  },
                  "linkedin_url": {
                    "type": "string",
                    "description": "URL LinkedIn"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lead enrichi cr√©√©",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "leadEnrich": {
                      "$ref": "#/components/schemas/LeadEnrich"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Enrichment non trouv√©"
          }
        }
      },
      "get": {
        "summary": "R√©cup√©rer tous les leads enrichis d'un enrichment",
        "tags": ["LeadEnrich"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "enrichmentId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID de l'enrichment parent"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Num√©ro de page"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Nombre d'√©l√©ments par page"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des leads enrichis",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "leads": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LeadEnrich"
                      }
                    },
                    "pagination": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Enrichment non trouv√©"
          }
        }
      }
    },
    "/api/enrichment/{enrichmentId}/leads/bulk": {
      "post": {
        "summary": "Ajouter plusieurs leads enrichis en lot",
        "tags": ["LeadEnrich"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "enrichmentId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID de l'enrichment parent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["leads"],
                "properties": {
                  "leads": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["firstname", "lastname"],
                      "properties": {
                        "firstname": {
                          "type": "string"
                        },
                        "lastname": {
                          "type": "string"
                        },
                        "company_name": {
                          "type": "string"
                        },
                        "domain": {
                          "type": "string"
                        },
                        "linkedin_url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Leads enrichis cr√©√©s en lot"
          },
          "400": {
            "description": "Donn√©es invalides"
          },
          "404": {
            "description": "Enrichment non trouv√©"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Company": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "registration_number": { "type": "string", "description": "Company registration number (max 20 characters)" },
          "full_registration_number": { "type": "string", "description": "Full registration number including country code (max 20 characters)" },
          "vat_number": { "type": "string", "nullable": true, "description": "VAT number (max 50 characters)" },
          "name": { "type": "string", "description": "Company name" },
          "business_name": { "type": "string", "nullable": true, "description": "Business or trading name" },
          "creation_date": { "type": "string", "format": "date", "nullable": true, "description": "Date of company creation" },
          "status": { "type": "string", "nullable": true, "description": "Company status (e.g., active, dissolved)" },
          "capital": { "type": "number", "nullable": true, "description": "Company capital amount" },
          "establishments_count": { "type": "integer", "nullable": true, "description": "Number of establishments" },
          "last_legal_update": { "type": "string", "format": "date", "nullable": true, "description": "Date of last legal update" },
          "establishments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Establishment" },
            "description": "List of company establishments"
          },
          "officers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Officer" },
            "description": "List of company officers"
          },
          "beneficial_owners": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BeneficialOwner" },
            "description": "List of beneficial owners"
          },
          "financial_statements": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FinancialStatement" },
            "description": "List of financial statements"
          },
          "risk_assessment": { "$ref": "#/components/schemas/RiskAssessment", "nullable": true, "description": "Risk assessment for the company" },
          "bodacc_notices": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BodaccNotice" },
            "description": "List of BODACC notices"
          },
          "legal_acts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LegalAct" },
            "description": "List of legal acts"
          },
          "web_info": { "$ref": "#/components/schemas/WebInfo", "nullable": true, "description": "Web and social media information" },
          "emails": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Email" },
            "description": "List of associated email addresses"
          }
        },
        "required": ["id", "registration_number", "full_registration_number", "name"]
      },
      "CompanyInput": {
        "type": "object",
        "properties": {
          "registration_number": { "type": "string", "description": "Company registration number (max 20 characters)" },
          "full_registration_number": { "type": "string", "description": "Full registration number including country code (max 20 characters)" },
          "vat_number": { "type": "string", "nullable": true, "description": "VAT number (max 50 characters)" },
          "name": { "type": "string", "description": "Company name" },
          "business_name": { "type": "string", "nullable": true, "description": "Business or trading name" },
          "creation_date": { "type": "string", "format": "date", "nullable": true, "description": "Date of company creation" },
          "status": { "type": "string", "nullable": true, "description": "Company status" },
          "capital": { "type": "number", "nullable": true, "description": "Company capital amount" },
          "establishments_count": { "type": "integer", "nullable": true, "description": "Number of establishments" },
          "last_legal_update": { "type": "string", "format": "date", "nullable": true, "description": "Date of last legal update" }
        },
        "required": ["registration_number", "full_registration_number", "name"]
      },
      "Establishment": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "siret": { "type": "string", "description": "SIRET number (max 20 characters)" },
          "is_head_office": { "type": "boolean", "description": "Indicates if this is the head office" },
          "creation_date": { "type": "string", "format": "date", "nullable": true, "description": "Date of establishment creation" },
          "status": { "type": "string", "nullable": true, "description": "Establishment status" },
          "address_id": { "type": "string", "format": "uuid", "nullable": true, "description": "Reference to address" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" },
          "address": { "$ref": "#/components/schemas/Address", "nullable": true, "description": "Associated address" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "siret", "is_head_office", "company_id"]
      },
      "EstablishmentInput": {
        "type": "object",
        "properties": {
          "siret": { "type": "string", "description": "SIRET number (max 20 characters)" },
          "is_head_office": { "type": "boolean", "description": "Indicates if this is the head office" },
          "creation_date": { "type": "string", "format": "date", "nullable": true, "description": "Date of establishment creation" },
          "status": { "type": "string", "nullable": true, "description": "Establishment status" },
          "address_id": { "type": "string", "format": "uuid", "nullable": true, "description": "Reference to address" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["siret", "is_head_office", "company_id"]
      },
      "Officer": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "first_name": { "type": "string", "nullable": true, "description": "Officer's first name" },
          "last_name": { "type": "string", "nullable": true, "description": "Officer's last name" },
          "role": { "type": "string", "nullable": true, "description": "Officer's role (e.g., CEO, CFO)" },
          "start_date": { "type": "string", "format": "date", "nullable": true, "description": "Start date of role" },
          "end_date": { "type": "string", "format": "date", "nullable": true, "description": "End date of role" },
          "registration_number": { "type": "string", "nullable": true, "description": "Registration number if officer is a company (max 20 characters)" },
          "is_company": { "type": "boolean", "nullable": true, "description": "Indicates if the officer is a company" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "company_id"]
      },
      "OfficerInput": {
        "type": "object",
        "properties": {
          "first_name": { "type": "string", "nullable": true, "description": "Officer's first name" },
          "last_name": { "type": "string", "nullable": true, "description": "Officer's last name" },
          "role": { "type": "string", "nullable": true, "description": "Officer's role" },
          "start_date": { "type": "string", "format": "date", "nullable": true, "description": "Start date of role" },
          "end_date": { "type": "string", "format": "date", "nullable": true, "description": "End date of role" },
          "registration_number": { "type": "string", "nullable": true, "description": "Registration number if officer is a company" },
          "is_company": { "type": "boolean", "nullable": true, "description": "Indicates if the officer is a company" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["company_id"]
      },
      "BeneficialOwner": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "first_name": { "type": "string", "nullable": true, "description": "Beneficial owner's first name" },
          "last_name": { "type": "string", "nullable": true, "description": "Beneficial owner's last name" },
          "birth_date": { "type": "string", "nullable": true, "description": "Birth date as text" },
          "direct_shares_pct": { "type": "number", "nullable": true, "description": "Percentage of direct shares" },
          "indirect_shares_pct": { "type": "number", "nullable": true, "description": "Percentage of indirect shares" },
          "voting_rights_pct": { "type": "number", "nullable": true, "description": "Percentage of voting rights" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "company_id"]
      },
      "BeneficialOwnerInput": {
        "type": "object",
        "properties": {
          "first_name": { "type": "string", "nullable": true, "description": "Beneficial owner's first name" },
          "last_name": { "type": "string", "nullable": true, "description": "Beneficial owner's last name" },
          "birth_date": { "type": "string", "nullable": true, "description": "Birth date as text" },
          "direct_shares_pct": { "type": "number", "nullable": true, "description": "Percentage of direct shares" },
          "indirect_shares_pct": { "type": "number", "nullable": true, "description": "Percentage of indirect shares" },
          "voting_rights_pct": { "type": "number", "nullable": true, "description": "Percentage of voting rights" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["company_id"]
      },
      "FinancialStatement": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "year": { "type": "integer", "description": "Financial year" },
          "sales": { "type": "number", "nullable": true, "description": "Sales amount" },
          "profit": { "type": "number", "nullable": true, "description": "Profit amount" },
          "staff": { "type": "integer", "nullable": true, "description": "Number of staff" },
          "closing_date": { "type": "string", "format": "date", "nullable": true, "description": "Financial statement closing date" },
          "is_estimated": { "type": "boolean", "nullable": true, "description": "Indicates if data is estimated" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "year", "company_id"]
      },
      "FinancialStatementInput": {
        "type": "object",
        "properties": {
          "year": { "type": "integer", "description": "Financial year" },
          "sales": { "type": "number", "nullable": true, "description": "Sales amount" },
          "profit": { "type": "number", "nullable": true, "description": "Profit amount" },
          "staff": { "type": "integer", "nullable": true, "description": "Number of staff" },
          "closing_date": { "type": "string", "format": "date", "nullable": true, "description": "Financial statement closing date" },
          "is_estimated": { "type": "boolean", "nullable": true, "description": "Indicates if data is estimated" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["year", "company_id"]
      },
      "RiskAssessment": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "risk_level": { "type": "integer", "minimum": 0, "maximum": 5, "description": "Risk level (0-5)" },
          "description": { "type": "string", "nullable": true, "description": "Risk assessment description" },
          "collective_procedure": { "type": "boolean", "nullable": true, "description": "Indicates if under collective procedure" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company (unique)" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "risk_level", "company_id"]
      },
      "RiskAssessmentInput": {
        "type": "object",
        "properties": {
          "risk_level": { "type": "integer", "minimum": 0, "maximum": 5, "description": "Risk level (0-5)" },
          "description": { "type": "string", "nullable": true, "description": "Risk assessment description" },
          "collective_procedure": { "type": "boolean", "nullable": true, "description": "Indicates if under collective procedure" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["risk_level", "company_id"]
      },
      "BodaccNotice": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "type": { "type": "string", "nullable": true, "description": "Type of BODACC notice" },
          "parution_date": { "type": "string", "format": "date", "nullable": true, "description": "Publication date" },
          "number": { "type": "string", "nullable": true, "description": "Notice number" },
          "description": { "type": "string", "nullable": true, "description": "Notice description" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "company_id"]
      },
      "BodaccNoticeInput": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "nullable": true, "description": "Type of BODACC notice" },
          "parution_date": { "type": "string", "format": "date", "nullable": true, "description": "Publication date" },
          "number": { "type": "string", "nullable": true, "description": "Notice number" },
          "description": { "type": "string", "nullable": true, "description": "Notice description" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["company_id"]
      },
      "LegalAct": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "date": { "type": "string", "format": "date", "nullable": true, "description": "Date of legal act" },
          "type": { "type": "string", "nullable": true, "description": "Type of legal act" },
          "description": { "type": "string", "nullable": true, "description": "Legal act description" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "company_id"]
      },
      "LegalActInput": {
        "type": "object",
        "properties": {
          "date": { "type": "string", "format": "date", "nullable": true, "description": "Date of legal act" },
          "type": { "type": "string", "nullable": true, "description": "Type of legal act" },
          "description": { "type": "string", "nullable": true, "description": "Legal act description" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["company_id"]
      },
      "WebInfo": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "logos": { "type": "array", "items": { "type": "string" }, "nullable": true, "description": "Array of logo URLs" },
          "websites": { "type": "array", "items": { "type": "string" }, "nullable": true, "description": "Array of website URLs" },
          "linkedin_url": { "type": "string", "nullable": true, "description": "LinkedIn URL" },
          "twitter_url": { "type": "string", "nullable": true, "description": "Twitter URL" },
          "facebook_url": { "type": "string", "nullable": true, "description": "Facebook URL" },
          "instagram_url": { "type": "string", "nullable": true, "description": "Instagram URL" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company (unique)" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "company_id"]
      },
      "WebInfoInput": {
        "type": "object",
        "properties": {
          "logos": { "type": "array", "items": { "type": "string" }, "nullable": true, "description": "Array of logo URLs" },
          "websites": { "type": "array", "items": { "type": "string" }, "nullable": true, "description": "Array of website URLs" },
          "linkedin_url": { "type": "string", "nullable": true, "description": "LinkedIn URL" },
          "twitter_url": { "type": "string", "nullable": true, "description": "Twitter URL" },
          "facebook_url": { "type": "string", "nullable": true, "description": "Facebook URL" },
          "instagram_url": { "type": "string", "nullable": true, "description": "Instagram URL" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["company_id"]
      },
      "Email": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "value": { "type": "string", "description": "Email address" },
          "type": { "type": "string", "enum": ["generic", "personal"], "description": "Email type" },
          "test_result": { "type": "string", "nullable": true, "description": "Result of email validation test" },
          "test_date": { "type": "string", "format": "date", "nullable": true, "description": "Date of email validation test" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" },
          "company": { "$ref": "#/components/schemas/Company", "description": "Associated company" }
        },
        "required": ["id", "value", "type", "company_id"]
      },
      "EmailInput": {
        "type": "object",
        "properties": {
          "value": { "type": "string", "description": "Email address" },
          "type": { "type": "string", "enum": ["generic", "personal"], "description": "Email type" },
          "test_result": { "type": "string", "nullable": true, "description": "Result of email validation test" },
          "test_date": { "type": "string", "format": "date", "nullable": true, "description": "Date of email validation test" },
          "company_id": { "type": "string", "format": "uuid", "description": "Reference to company" }
        },
        "required": ["value", "type", "company_id"]
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "street": { "type": "string", "nullable": true, "description": "Street address" },
          "postal_code": { "type": "string", "nullable": true, "description": "Postal code (max 10 characters)" },
          "city": { "type": "string", "nullable": true, "description": "City" },
          "country_code": { "type": "string", "nullable": true, "description": "Country code (max 5 characters)" },
          "lat": { "type": "number", "nullable": true, "description": "Latitude" },
          "lng": { "type": "number", "nullable": true, "description": "Longitude" }
        },
        "required": ["id"]
      },
      "AddressInput": {
        "type": "object",
        "properties": {
          "street": { "type": "string", "nullable": true, "description": "Street address" },
          "postal_code": { "type": "string", "nullable": true, "description": "Postal code (max 10 characters)" },
          "city": { "type": "string", "nullable": true, "description": "City" },
          "country_code": { "type": "string", "nullable": true, "description": "Country code (max 5 characters)" },
          "lat": { "type": "number", "nullable": true, "description": "Latitude" },
          "lng": { "type": "number", "nullable": true, "description": "Longitude" }
        },
        "required": []
      },
      "File": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "file_name": { "type": "string", "nullable": true, "description": "Name of the file" },
          "upload_date": { "type": "string", "format": "date-time", "nullable": true, "description": "File upload date" },
          "row_count": { "type": "integer", "nullable": true, "description": "Number of rows in the file" },
          "enriched_row_count": { "type": "integer", "nullable": true, "description": "Number of enriched rows" },
          "status": {
            "type": "string",
            "enum": ["uploaded", "processing", "completed", "error"],
            "nullable": true,
            "description": "File processing status"
          },
          "first_name": { "type": "string", "nullable": true, "description": "First name from file data" },
          "last_name": { "type": "string", "nullable": true, "description": "Last name from file data" },
          "gender": { "type": "string", "nullable": true, "description": "Gender from file data" },
          "title": { "type": "string", "nullable": true, "description": "Job title from file data" },
          "email": { "type": "string", "nullable": true, "description": "Email from file data" },
          "phone": { "type": "string", "nullable": true, "description": "Phone number from file data" },
          "all_phones": { "type": "string", "nullable": true, "description": "All phone numbers as text" },
          "company_name": { "type": "string", "nullable": true, "description": "Company name from file data" },
          "company_cleaned_name": { "type": "string", "nullable": true, "description": "Cleaned company name" },
          "company_website": { "type": "string", "nullable": true, "description": "Company website URL" },
          "company_domain": { "type": "string", "nullable": true, "description": "Company domain" },
          "linkedin_profile_url": { "type": "string", "nullable": true, "description": "LinkedIn profile URL" },
          "company_linkedin_id_url": { "type": "string", "nullable": true, "description": "Company LinkedIn ID URL" },
          "location": { "type": "string", "nullable": true, "description": "Location from file data" },
          "company_location": { "type": "string", "nullable": true, "description": "Company location" },
          "company_industry": { "type": "string", "nullable": true, "description": "Company industry" },
          "employee_count": { "type": "string", "nullable": true, "description": "Employee count as text" },
          "employee_range": { "type": "string", "nullable": true, "description": "Employee count range" },
          "revenue": { "type": "string", "nullable": true, "description": "Revenue as text" },
          "headquarters": { "type": "string", "nullable": true, "description": "Company headquarters location" },
          "year_founded": { "type": "string", "nullable": true, "description": "Year company was founded" },


          "linkedin_headline": { "type": "string", "nullable": true, "description": "LinkedIn headline" },
          "linkedin_connections_count": { "type": "integer", "nullable": true, "description": "Number of LinkedIn connections" },
          "start_date_job": { "type": "string", "nullable": true, "description": "Job start date" },
          "start_date_company": { "type": "string", "nullable": true, "description": "Company start date" },
          "years_in_position": { "type": "integer", "nullable": true, "description": "Years in current position" },
          "months_in_position": { "type": "integer", "nullable": true, "description": "Months in current position" },
          "years_in_company": { "type": "integer", "nullable": true, "description": "Years in company" },
          "months_in_company": { "type": "integer", "nullable": true, "description": "Months in company" },
          "current_positions_count": { "type": "integer", "nullable": true, "description": "Number of current positions" },
          "title_description": { "type": "string", "nullable": true, "description": "Job title description" },
          "summary": { "type": "string", "nullable": true, "description": "Profile summary" },
          "full_name": { "type": "string", "nullable": true, "description": "Full name from file data" },
          "sales_navigator_profile_url": { "type": "string", "nullable": true, "description": "Sales Navigator profile URL" },
          "linkedin_id_url": { "type": "string", "nullable": true, "description": "LinkedIn ID URL" },
          "profile_image_url": { "type": "string", "nullable": true, "description": "Profile image URL" },
          "company_profile_picture": { "type": "string", "nullable": true, "description": "Company profile picture URL" },
          "company_description": { "type": "string", "nullable": true, "description": "Company description" },
          "company_linkedin": { "type": "string", "nullable": true, "description": "Company LinkedIn URL" },
          "connection_degree": { "type": "string", "nullable": true, "description": "LinkedIn connection degree" },
          "is_premium_linkedin": { "type": "boolean", "nullable": true, "description": "Indicates if LinkedIn profile is premium" },
          "is_open_profile_linkedin": { "type": "boolean", "nullable": true, "description": "Indicates if LinkedIn profile is open" },
          "is_open_to_work_linkedin": { "type": "boolean", "nullable": true, "description": "Indicates if open to work on LinkedIn" },
          "email_alt": { "type": "string", "nullable": true, "description": "Alternative email" },
          "phone_alt": { "type": "string", "nullable": true, "description": "Alternative phone number" },
          "all_phones_alt": { "type": "string", "nullable": true, "description": "All alternative phone numbers as text" },
          "company_id": { "type": "string", "format": "uuid", "nullable": true, "description": "Reference to company" },
          "company": { "$ref": "#/components/schemas/Company", "nullable": true, "description": "Associated company" }
        },
        "required": ["id"]
      },
      "FileInput": {
        "type": "object",
        "properties": {
          "file_name": { "type": "string", "nullable": true, "description": "Name of the file" },
          "upload_date": { "type": "string", "format": "date-time", "nullable": true, "description": "File upload date" },
          "row_count": { "type": "integer", "nullable": true, "description": "Number of rows in the file" },
          "enriched_row_count": { "type": "integer", "nullable": true, "description": "Number of enriched rows" },
          "status": {
            "type": "string",
            "enum": ["uploaded", "processing", "completed", "error"],
            "nullable": true,
            "description": "File processing status"
          },
          "first_name": { "type": "string", "nullable": true, "description": "First name from file data" },
          "last_name": { "type": "string", "nullable": true, "description": "Last name from file data" },
          "gender": { "type": "string", "nullable": true, "description": "Gender from file data" },
          "title": { "type": "string", "nullable": true, "description": "Job title from file data" },
          "email": { "type": "string", "nullable": true, "description": "Email from file data" },
          "phone": { "type": "string", "nullable": true, "description": "Phone number from file data" },
          "all_phones": { "type": "string", "nullable": true, "description": "All phone numbers as text" },
          "company_name": { "type": "string", "nullable": true, "description": "Company name from file data" },
          "company_cleaned_name": { "type": "string", "nullable": true, "description": "Cleaned company name" },
          "company_website": { "type": "string", "nullable": true, "description": "Company website URL" },
          "company_domain": { "type": "string", "nullable": true, "description": "Company domain" },
          "linkedin_profile_url": { "type": "string", "nullable": true, "description": "LinkedIn profile URL" },
          "company_linkedin_id_url": { "type": "string", "nullable": true, "description": "Company LinkedIn ID URL" },
          "location": { "type": "string", "nullable": true, "description": "Location from file data" },
          "company_location": { "type": "string", "nullable": true, "description": "Company location" },
          "company_industry": { "type": "string", "nullable": true, "description": "Company industry" },
          "employee_count": { "type": "string", "nullable": true, "description": "Employee count as text" },
          "employee_range": { "type": "string", "nullable": true, "description": "Employee count range" },
          "revenue": { "type": "string", "nullable": true, "description": "Revenue as text" },
          "headquarters": { "type": "string", "nullable": true, "description": "Company headquarters location" },
          "year_founded": { "type": "string", "nullable": true, "description": "Year company was founded" },
          "linkedin_headline": { "type": "string", "nullable": true, "description": "LinkedIn headline" },
          "linkedin_connections_count": { "type": "integer", "nullable": true, "description": "Number of LinkedIn connections" },
          "start_date_job": { "type": "string", "nullable": true, "description": "Job start date" },
          "start_date_company": { "type": "string", "nullable": true, "description": "Company start date" },
          "years_in_position": { "type": "integer", "nullable": true, "description": "Years in current position" },
          "months_in_position": { "type": "integer", "nullable": true, "description": "Months in current position" },
          "years_in_company": { "type": "integer", "nullable": true, "description": "Years in company" },
          "months_in_company": { "type": "integer", "nullable": true, "description": "Months in company" },
          "current_positions_count": { "type": "integer", "nullable": true, "description": "Number of current positions" },
          "title_description": { "type": "string", "nullable": true, "description": "Job title description" },
          "summary": { "type": "string", "nullable": true, "description": "Profile summary" },
          "full_name": { "type": "string", "nullable": true, "description": "Full name from file data" },
          "sales_navigator_profile_url": { "type": "string", "nullable": true, "description": "Sales Navigator profile URL" },
          "linkedin_id_url": { "type": "string", "nullable": true, "description": "LinkedIn ID URL" },
          "profile_image_url": { "type": "string", "nullable": true, "description": "Profile image URL" },
          "company_profile_picture": { "type": "string", "nullable": true, "description": "Company profile picture URL" },
          "company_description": { "type": "string", "nullable": true, "description": "Company description" },
          "company_linkedin": { "type": "string", "nullable": true, "description": "Company LinkedIn URL" },
          "connection_degree": { "type": "string", "nullable": true, "description": "LinkedIn connection degree" },
          "is_premium_linkedin": { "type": "boolean", "nullable": true, "description": "Indicates if LinkedIn profile is premium" },
          "is_open_profile_linkedin": { "type": "boolean", "nullable": true, "description": "Indicates if LinkedIn profile is open" },
          "is_open_to_work_linkedin": { "type": "boolean", "nullable": true, "description": "Indicates if open to work on LinkedIn" },
          "email_alt": { "type": "string", "nullable": true, "description": "Alternative email" },
          "phone_alt": { "type": "string", "nullable": true, "description": "Alternative phone number" },
          "all_phones_alt": { "type": "string", "nullable": true, "description": "All alternative phone numbers as text" },
          "company_id": { "type": "string", "format": "uuid", "nullable": true, "description": "Reference to company" }
        },
        "required": []
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid", "description": "Unique identifier (UUID)" },
          "name": { "type": "string", "description": "User's name" },
          "email": { "type": "string", "description": "User's email" },
          "role": { "type": "string", "description": "User's role" },
          "status": { "type": "string", "description": "User's status" },
          "created_at": { "type": "string", "format": "date-time", "description": "Date and time user was created" },
          "updated_at": { "type": "string", "format": "date-time", "description": "Date and time user was last updated" }
        },
        "required": ["id", "name", "email", "role", "status"]
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "User's name" },
          "email": { "type": "string", "description": "User's email" },
          "role": { "type": "string", "description": "User's role" },
          "status": { "type": "string", "description": "User's status" }
        },
        "required": ["name", "email", "role", "status"]
      },
      "ProntoPersona": {
        "type": "object",
        "properties": {
          "uuid": { "type": "string", "format": "uuid", "description": "Unique identifier for the persona" },
          "name": { "type": "string", "description": "Name of the persona" },
          "job_titles": { 
            "type": "array", 
            "items": { "type": "string" }, 
            "description": "List of job titles for this persona" 
          },
          "location": { 
            "type": "array", 
            "items": { "type": "string" }, 
            "description": "List of locations for this persona" 
          },
          "created_at": { "type": "string", "format": "date-time", "description": "Creation timestamp" },
          "updated_at": { "type": "string", "format": "date-time", "description": "Last update timestamp" }
        },
        "required": ["uuid", "name"]
      },
      "ProntoList": {
        "type": "object",
        "properties": {
          "uuid": { "type": "string", "format": "uuid", "description": "Unique identifier for the list" },
          "name": { "type": "string", "description": "Name of the list" },
          "description": { "type": "string", "description": "Description of the list" },
          "created_at": { "type": "string", "format": "date-time", "description": "Creation timestamp" },
          "updated_at": { "type": "string", "format": "date-time", "description": "Last update timestamp" }
        },
        "required": ["uuid", "name"]
      },
      "ProntoSearch": {
        "type": "object",
        "properties": {
          "uuid": { "type": "string", "format": "uuid", "description": "Unique identifier for the search" },
          "name": { "type": "string", "description": "Name of the search" },
          "query": { "type": "object", "description": "Search query parameters" },
          "created_at": { "type": "string", "format": "date-time", "description": "Creation timestamp" },
          "updated_at": { "type": "string", "format": "date-time", "description": "Last update timestamp" }
        },
        "required": ["uuid", "name"]
      },
      "ProntoAccount": {
        "type": "object",
        "properties": {
          "uuid": { "type": "string", "format": "uuid", "description": "Unique identifier for the account" },
          "name": { "type": "string", "description": "Company name" },
          "website": { "type": "string", "description": "Company website" },
          "linkedin_url": { "type": "string", "description": "LinkedIn URL" },
          "industry": { "type": "string", "description": "Industry" },
          "size": { "type": "string", "description": "Company size" },
          "location": { "type": "string", "description": "Company location" }
        },
        "required": ["uuid", "name"]
      },
      "ProntoContact": {
        "type": "object",
        "properties": {
          "uuid": { "type": "string", "format": "uuid", "description": "Unique identifier for the contact" },
          "first_name": { "type": "string", "description": "Contact's first name" },
          "last_name": { "type": "string", "description": "Contact's last name" },
          "email": { "type": "string", "description": "Contact's email" },
          "phone": { "type": "string", "description": "Contact's phone number" },
          "job_title": { "type": "string", "description": "Contact's job title" },
          "company": { "type": "string", "description": "Contact's company" },
          "linkedin_url": { "type": "string", "description": "LinkedIn URL" }
        },
        "required": ["uuid", "first_name", "last_name"]
      },
      "LinkedInFilterType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Filter type identifier"
          },
          "name": {
            "type": "string",
            "description": "Human-readable filter name"
          },
          "description": {
            "type": "string",
            "description": "Filter description"
          }
        },
        "required": ["type", "name"]
      },
      "LinkedInFilterValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the filter value (e.g., URN LinkedIn for companies)"
          },
          "text": {
            "type": "string",
            "description": "Display text for the filter"
          },
          "selectionType": {
            "type": "string",
            "enum": ["INCLUDED", "EXCLUDED"],
            "default": "INCLUDED",
            "description": "Whether to include or exclude this value"
          }
        },
        "required": ["id", "text"]
      },
      "LinkedInSearchFilters": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of LinkedIn Sales Navigator filter"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedInFilterValue"
            },
            "description": "Filter values to apply"
          }
        },
        "required": ["type", "values"]
      },
      "LinkedInSearchRequest": {
        "type": "object",
        "required": ["searchType"],
        "properties": {
          "searchType": {
            "type": "string",
            "enum": ["people", "company"],
            "description": "Type of search - people for prospects, company for companies"
          },
          "keywords": {
            "type": "string",
            "description": "Generic search keywords"
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedInSearchFilters"
            },
            "description": "List of filters to apply"
          },
          "sessionId": {
            "type": "string",
            "description": "LinkedIn session ID (optional)"
          },
          "viewAllFilters": {
            "type": "boolean",
            "default": false,
            "description": "Show all available filters"
          }
        }
      },
      "LinkedInSearchResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "description": "Complete LinkedIn Sales Navigator search URL"
          },
          "searchType": {
            "type": "string",
            "enum": ["people", "company"]
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedInSearchFilters"
            }
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Queries",
      "description": "GraphQL queries for retrieving data (read-only operations, equivalent to HTTP GET)"
    },
    {
      "name": "Mutations",
      "description": "GraphQL mutations for creating, updating, or deleting data (equivalent to HTTP POST, PUT, DELETE)"
    },
    {
      "name": "GraphQL",
      "description": "Operations performed via the GraphQL endpoint"
    },
    {
      "name": "Pronto",
      "description": "Pronto API endpoints for B2B prospecting and data enrichment"
    },
    {
      "name": "Pronto Workflows",
      "description": "Composite workflows that combine multiple Pronto API calls for complex operations"
    },
    {
      "name": "LinkedIn Sales Navigator",
      "description": "LinkedIn Sales Navigator API endpoints for URL generation, parsing, and filter management"
    }
  ],
  "x-endpoint-descriptions": [
    {
      "operation": "query company",
      "description": "Retrieve a single company by ID",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query GetCompany($id: ID!) { company(id: $id) { id registration_number name } }",
          "variables": { "id": "123e4567-e89b-12d3-a456-426614174000" }
        },
        "response": {
          "data": {
            "company": {
              "id": "123e4567-e89b-12d3-a456-426614174000",
              "registration_number": "123456789",
              "name": "Example Corporation"
            }
          }
        }
      }
    },
    {
      "operation": "query companies",
      "description": "Retrieve all companies",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query { companies { id registration_number name } }"
        },
        "response": {
          "data": {
            "companies": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "registration_number": "123456789",
                "name": "Example Corporation"
              }
            ]
          }
        }
      }
    },
    {
      "operation": "query establishment",
      "description": "Retrieve a single establishment by ID",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query GetEstablishment($id: ID!) { establishment(id: $id) { id siret company { id name } } }",
          "variables": { "id": "123e4567-e89b-12d3-a456-426614174001" }
        },
        "response": {
          "data": {
            "establishment": {
              "id": "123e4567-e89b-12d3-a456-426614174001",
              "siret": "987654321",
              "company": {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "Example Corporation"
              }
            }
          }
        }
      }
    },
    {
      "operation": "query establishments",
      "description": "Retrieve all establishments",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query { establishments { id siret } }"
        },
        "response": {
          "data": {
            "establishments": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174001",
                "siret": "987654321"
              }
            ]
          }
        }
      }
    },
    {
      "operation": "query officer",
      "description": "Retrieve a single officer by ID",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query GetOfficer($id: ID!) { officer(id: $id) { id first_name last_name role } }",
          "variables": { "id": "123e4567-e89b-12d3-a456-426614174002" }
        },
        "response": {
          "data": {
            "officer": {
              "id": "123e4567-e89b-12d3-a456-426614174002",
              "first_name": "John",
              "last_name": "Doe",
              "role": "CEO"
            }
          }
        }
      }
    },
    {
      "operation": "query officers",
      "description": "Retrieve all officers",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query { officers { id first_name last_name role } }"
        },
        "response": {
          "data": {
            "officers": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174002",
                "first_name": "John",
                "last_name": "Doe",
                "role": "CEO"
              }
            ]
          }
        }
      }
    },
    {
      "operation": "query file",
      "description": "Retrieve a single file by ID",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query GetFile($id: ID!) { file(id: $id) { id file_name company { id name } } }",
          "variables": { "id": "123e4567-e89b-12d3-a456-426614174004" }
        },
        "response": {
          "data": {
            "file": {
              "id": "123e4567-e89b-12d3-a456-426614174004",
              "file_name": "report.pdf",
              "company": {
                "id": "123e4567-e89b-12d3-a456-426614174000",
                "name": "Example Corporation"
              }
            }
          }
        }
      }
    },
    {
      "operation": "query files",
      "description": "Retrieve all files",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query { files { id file_name } }"
        },
        "response": {
          "data": {
            "files": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174004",
                "file_name": "report.pdf"
              }
            ]
          }
        }
      }
    },
    {
      "operation": "query beneficialOwner",
      "description": "Retrieve a single beneficial owner by ID",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query GetBeneficialOwner($id: ID!) { beneficialOwner(id: $id) { id first_name last_name } }",
          "variables": { "id": "123e4567-e89b-12d3-a456-426614174003" }
        },
        "response": {
          "data": {
            "beneficialOwner": {
              "id": "123e4567-e89b-12d3-a456-426614174003",
              "first_name": "Jane",
              "last_name": "Doe"
            }
          }
        }
      }
    },
    {
      "operation": "query beneficialOwners",
      "description": "Retrieve all beneficial owners",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query { beneficialOwners { id first_name last_name } }"
        },
        "response": {
          "data": {
            "beneficialOwners": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174003",
                "first_name": "Jane",
                "last_name": "Doe"
              }
            ]
          }
        }
      }
    },
    {
      "operation": "query financialStatement",
      "description": "Retrieve a single financial statement by ID",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query GetFinancialStatement($id: ID!) { financialStatement(id: $id) { id year sales } }",
          "variables": { "id": "123e4567-e89b-12d3-a456-426614174005" }
        },
        "response": {
          "data": {
            "financialStatement": {
              "id": "123e4567-e89b-12d3-a456-426614174005",
              "year": 2023,
              "sales": 1000000
            }
          }
        }
      }
    },
    {
      "operation": "query financialStatements",
      "description": "Retrieve all financial statements",
      "equivalent": "GET",
      "example": {
        "request": {
          "query": "query { financialStatements { id year sales } }"
        },
        "response": {
          "data": {
            "financialStatements": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174005",
                "year": 2023,
                "sales": 1000000
              }
            ]
          }
        }
      }
    }
  ]
}